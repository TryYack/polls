{"version":3,"file":"static/webpack/static/development/pages/create.js.b0173bd9c436cef16a7b.hot-update.js","sources":["webpack:///./components/form.component.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Progress, Button, Input, Textarea, Select } from '@weekday/elements'\nimport moment from 'moment'\nimport { Trash } from 'react-feather'\n\nexport default function FormComponent(props) {\n  const today = moment()\n  const [id, setId] = useState(null)\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [day, setDay] = useState(today.format('DD'))\n  const [month, setMonth] = useState(today.format('MM'))\n  const [year, setYear] = useState(today.format('YYYY'))\n  const [questions, setQuestions] = useState([{id: 0, text: ''}])\n\n  const addQuestion = () => setQuestions([...questions, {\n    id: questions.length + 1,\n    text: '',\n  }])\n\n  const removeQuestion = (index) => {\n    let mutableQuestions = Object.assign([], questions)\n    mutableQuestions.splice(index, 1)\n    setQuestions(mutableQuestions)\n  }\n\n  const updateQuestion = (text, id) => {\n    setQuestions(questions.map(question => {\n      if (id != question.id) return question\n\n      return { id: question.id, text }\n    }))\n  }\n\n  const save = () => {\n    const expiry = moment(`${day}/${month}/${year}`, 'DD/MM/YYYY').toDate()\n\n    // If we are updating\n    if (id) props.onSubmit(id, title, description, questions)\n\n    // If we are creating\n    if (!id) props.onSubmit(title, description, questions)\n  }\n\n  useEffect(() => {\n    if (!props.id) return\n\n    const date = moment(props.expiry).add(1, 'months')\n\n    setId(props.id)\n    setTitle(props.title)\n    setDescription(props.description)\n    setDay(date.format('DD'))\n    setMonth(date.format('MM'))\n    setYear(date.format('YYYY'))\n    setQuestions(props.questions)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <style jsx>{`\n        .poll-container {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .poll-inner {\n          flex-direction: column;\n          display: flex;\n          align-items: center;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .progress-container {\n          margin-bottom: 5px;\n          width: 100%;\n        }\n      `}</style>\n\n      <div className=\"poll-container\">\n        <div className=\"poll-inner\">\n          <div className=\"h4 color-d3 text-left w-100 mb-20\">Create a new poll</div>\n\n          <Input\n            value={title}\n            inputSize=\"large\"\n            placeholder=\"Poll title\"\n            onChange={e => setTitle(e.target.value)}\n          />\n\n          <Textarea\n            value={description}\n            textareaSize=\"large\"\n            placeholder=\"Poll description\"\n            rows={3}\n            onChange={e => setDescription(e.target.value)}\n          />\n\n          <div className=\"h5 color-d0 text-left w-100 mb-10 mt-20\">Questions</div>\n\n          {questions.map((question, index) => {\n            return (\n              <div className=\"row w-100 mb-5\" key={index}>\n                <Input\n                  value={question.text}\n                  placeholder=\"Option text\"\n                  inputSize=\"large\"\n                  onChange={e => updateQuestion(e.target.value, question.id)}\n                />\n              <Trash\n                  color=\"#ACB5BD\"\n                  size=\"20\"\n                  thickness=\"1.5\"\n                  className=\"ml-20 button\"\n                  onClick={e => removeQuestion(index)}\n                />\n              </div>\n            )\n          })}\n\n          <div className=\"h5 color-d0 text-left w-100 mb-10 mt-20\">Expiry</div>\n\n          <div className=\"row w-100\">\n            <div className=\"flexer column pr-10\">\n              <div className=\"small color-highlight text-left\">Day</div>\n              <Select\n                selected={0}\n                size=\"large\"\n                onSelect={(index) => console.log(index)}\n                options={[\n                  { option: 'One', value: 1 },\n                  { option: 'Two', value: 2 },\n                  { option: 'Three', value: 3 },\n                  { option: 'Four', value: 4 },\n                  { option: 'Five', value: 5 },\n                  { option: 'One', value: 1 },\n                  { option: 'Two', value: 2 },\n                  { option: 'Three', value: 3 },\n                  { option: 'Four', value: 4 },\n                  { option: 'Five', value: 5 },\n                ]}\n              />\n            </div>\n\n            <div className=\"flexer column p-10\">\n              <div className=\"small color-highlight text-left\">Month</div>\n              <Select\n                selected={0}\n                size=\"large\"\n                onSelect={(index) => console.log(index)}\n                options={[\n                  { option: 'One', value: 1 },\n                  { option: 'Two', value: 2 },\n                  { option: 'Three', value: 3 },\n                  { option: 'Four', value: 4 },\n                  { option: 'Five', value: 5 },\n                  { option: 'One', value: 1 },\n                  { option: 'Two', value: 2 },\n                  { option: 'Three', value: 3 },\n                  { option: 'Four', value: 4 },\n                  { option: 'Five', value: 5 },\n                ]}\n              />\n            </div>\n\n            <div className=\"flexer column pl-10\">\n              <div className=\"small color-highlight text-left\">Year</div>\n              <Select\n                selected={0}\n                size=\"large\"\n                onSelect={(index) => console.log(index)}\n                options={[\n                  { option: 'One', value: 1 },\n                  { option: 'Two', value: 2 },\n                  { option: 'Three', value: 3 },\n                  { option: 'Four', value: 4 },\n                  { option: 'Five', value: 5 },\n                  { option: 'One', value: 1 },\n                  { option: 'Two', value: 2 },\n                  { option: 'Three', value: 3 },\n                  { option: 'Four', value: 4 },\n                  { option: 'Five', value: 5 },\n                ]}\n              />\n            </div>\n          </div>\n\n          <div className=\"row w-100 mt-20\">\n            <Button\n              size=\"small\"\n              theme=\"blue-border\"\n              text=\"Add a new question\"\n              onClick={addQuestion}\n            />\n            <div className=\"flexer\" />\n            <Button\n              size=\"small\"\n              theme=\"blue\"\n              text={!props.id ? \"Create poll\" : \"Update poll\"}\n              onClick={save}\n            />\n          </div>\n\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAQA;AAAA;AAAA;AARA;AAAA;AACA;AASA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;A","sourceRoot":""}