{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/components/poll.component.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Progress, Button } from '@weekday/elements';\nimport moment from 'moment';\nexport default function PollComponent(props) {\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useState2 = useState(0),\n      total = _useState2[0],\n      setTotal = _useState2[1];\n\n  var _useState3 = useState(0),\n      highest = _useState3[0],\n      setHighest = _useState3[1];\n\n  var _useState4 = useState(0),\n      expired = _useState4[0],\n      setExpired = _useState4[1];\n\n  var answerQuestion =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(questionId) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(questionId);\n              setComplete(true);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function answerQuestion(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var answerCountHighest = 0;\n    props.questions.map(function (question) {\n      // See if this user has completed the poll\n      props.answers.map(function (answer) {\n        if (answer.user_id == props.currentUserId) setComplete(true);\n      }); // Set the score for the highest amount of votes\n\n      answerCountHighest = props.answers.filter(function (answer) {\n        return answer.question_id == question.id;\n      }).length;\n    });\n    setTotal(props.answers.length);\n    setHighest(answerCountHighest);\n    setExpired(moment(props.expiry).isBefore(moment()));\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(_JSXStyle, {\n    id: \"389275926\",\n    __self: this\n  }, \".poll-container.jsx-389275926{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.poll-inner.jsx-389275926{-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.progress-container.jsx-389275926{margin-bottom:5px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvY29tcG9uZW50cy9wb2xsLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ2tCLEFBR3NCLEFBU0osQUFTVyxXQWpCTCxPQWtCRixXQUNiLElBVndCLG9EQVJBLDBCQVNULG9EQVJPLHNCQVNELDJFQVJFLGtCQVNBLDBEQVJFLGtCQVNBLGlGQVJ6QixrQkFTQSIsImZpbGUiOiIvVXNlcnMvam9kdXBsZXNzaXMvV29yay9XZWVrZGF5L3BvbGxzL2NvbXBvbmVudHMvcG9sbC5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgUHJvZ3Jlc3MsIEJ1dHRvbiB9IGZyb20gJ0B3ZWVrZGF5L2VsZW1lbnRzJ1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBvbGxDb21wb25lbnQocHJvcHMpIHtcbiAgY29uc3QgW2NvbXBsZXRlLCBzZXRDb21wbGV0ZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW3RvdGFsLCBzZXRUb3RhbF0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbaGlnaGVzdCwgc2V0SGlnaGVzdF0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbZXhwaXJlZCwgc2V0RXhwaXJlZF0gPSB1c2VTdGF0ZSgwKVxuXG4gIGNvbnN0IGFuc3dlclF1ZXN0aW9uID0gYXN5bmMgKHF1ZXN0aW9uSWQpID0+IHtcbiAgICBjb25zb2xlLmxvZyhxdWVzdGlvbklkKVxuICAgIHNldENvbXBsZXRlKHRydWUpXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBhbnN3ZXJDb3VudEhpZ2hlc3QgPSAwXG5cbiAgICBwcm9wcy5xdWVzdGlvbnMubWFwKHF1ZXN0aW9uID0+IHtcbiAgICAgIC8vIFNlZSBpZiB0aGlzIHVzZXIgaGFzIGNvbXBsZXRlZCB0aGUgcG9sbFxuICAgICAgcHJvcHMuYW5zd2Vycy5tYXAoYW5zd2VyID0+IHtcbiAgICAgICAgaWYgKGFuc3dlci51c2VyX2lkID09IHByb3BzLmN1cnJlbnRVc2VySWQpIHNldENvbXBsZXRlKHRydWUpXG4gICAgICB9KVxuXG4gICAgICAvLyBTZXQgdGhlIHNjb3JlIGZvciB0aGUgaGlnaGVzdCBhbW91bnQgb2Ygdm90ZXNcbiAgICAgIGFuc3dlckNvdW50SGlnaGVzdCA9IHByb3BzLmFuc3dlcnMuZmlsdGVyKGFuc3dlciA9PiBhbnN3ZXIucXVlc3Rpb25faWQgPT0gcXVlc3Rpb24uaWQpLmxlbmd0aFxuICAgIH0pXG5cbiAgICBzZXRUb3RhbChwcm9wcy5hbnN3ZXJzLmxlbmd0aClcbiAgICBzZXRIaWdoZXN0KGFuc3dlckNvdW50SGlnaGVzdClcbiAgICBzZXRFeHBpcmVkKG1vbWVudChwcm9wcy5leHBpcnkpLmlzQmVmb3JlKG1vbWVudCgpKSlcbiAgfSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5wb2xsLWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb2xsLWlubmVyIHtcbiAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wcm9ncmVzcy1jb250YWluZXIge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvbGwtY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9sbC1pbm5lclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaDQgY29sb3ItZDMgdGV4dC1sZWZ0IHctMTAwIG1iLTBcIj57cHJvcHMudGl0bGV9PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoNSBjb2xvci1kMCB0ZXh0LWxlZnQgdy0xMDAgbWItMTBcIj57cHJvcHMuZGVzY3JpcHRpb259PC9kaXY+XG5cbiAgICAgICAgICB7IWNvbXBsZXRlICYmICFleHBpcmVkICYmXG4gICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgIHtwcm9wcy5xdWVzdGlvbnMubWFwKChxdWVzdGlvbiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy1jb250YWluZXJcIiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e3F1ZXN0aW9uLnRleHR9XG4gICAgICAgICAgICAgICAgICAgICAgdGhlbWU9XCJibHVlLWJvcmRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogMzUgfX1cbiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBhbnN3ZXJRdWVzdGlvbihxdWVzdGlvbi5pZCl9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB7KGNvbXBsZXRlIHx8IGV4cGlyZWQpICYmXG4gICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgIHtwcm9wcy5xdWVzdGlvbnMubWFwKChxdWVzdGlvbiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXJzID0gcHJvcHMuYW5zd2Vycy5maWx0ZXIoYW5zd2VyID0+IGFuc3dlci5xdWVzdGlvbl9pZCA9PSBxdWVzdGlvbi5pZClcbiAgICAgICAgICAgICAgICBjb25zdCBwZXJjZW50YWdlID0gTWF0aC5mbG9vcigoYW5zd2Vycy5sZW5ndGggLyB0b3RhbCkgKiAxMDApXG4gICAgICAgICAgICAgICAgY29uc3QgY29sb3IgPSBhbnN3ZXJzLmxlbmd0aCA+PSBoaWdoZXN0ID8gJyNlOWVkZjInIDogJyNmMGYyZjUnXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy1jb250YWluZXJcIiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPFByb2dyZXNzXG4gICAgICAgICAgICAgICAgICAgICAgcGVyY2VudGFnZT17cGVyY2VudGFnZX1cbiAgICAgICAgICAgICAgICAgICAgICBjb2xvcj17Y29sb3J9XG4gICAgICAgICAgICAgICAgICAgICAgdGV4dD17cXVlc3Rpb24udGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbHM9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAgY29sb3ItZDEgdGV4dC1sZWZ0IHctMTAwIG10LTVcIj5cbiAgICAgICAgICAgIHtleHBpcmVkICYmXG4gICAgICAgICAgICAgIDxzcGFuPlRoaXMgcG9sbCBleHBpcmVkIHttb21lbnQocHJvcHMuZXhwaXJ5KS5mcm9tTm93KCl9PC9zcGFuPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeyFleHBpcmVkICYmXG4gICAgICAgICAgICAgIDxzcGFuPlRoaXMgcG9sbCBleHBpcmVzIGF0IHttb21lbnQocHJvcHMuZXhwaXJ5KS5mb3JtYXQoJ0xMTCcpfTwvc3Bhbj5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHtwcm9wcy5jdXJyZW50VXNlcklkID09IHByb3BzLnVzZXJJZCAmJlxuICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzTmFtZT1cImJ1dHRvbiBtbC0xMCBjb2xvci1ibHVlXCI+VXBkYXRlPC9zdHJvbmc+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7cHJvcHMuY3VycmVudFVzZXJJZCA9PSBwcm9wcy51c2VySWQgJiZcbiAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzc05hbWU9XCJidXR0b24gbWwtMTAgY29sb3ItcmVkXCI+RGVsZXRlPC9zdHJvbmc+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKVxufVxuIl19 */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/components/poll.component.js */\"), __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"poll-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"poll-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"h4 color-d3 text-left w-100 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"h5 color-d0 text-left w-100 mb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.description), !complete && !expired && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.questions.map(function (question, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-389275926\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(Button, {\n      text: question.text,\n      theme: \"blue-border\",\n      size: \"full-width\",\n      style: {\n        height: 35\n      },\n      onClick: function onClick() {\n        return answerQuestion(question.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  })), (complete || expired) && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.questions.map(function (question, index) {\n    var answers = props.answers.filter(function (answer) {\n      return answer.question_id == question.id;\n    });\n    var percentage = Math.floor(answers.length / total * 100);\n    var color = answers.length >= highest ? '#e9edf2' : '#f0f2f5';\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-389275926\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(Progress, {\n      percentage: percentage,\n      color: color,\n      text: question.text,\n      labels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, expired && __jsx(\"span\", {\n    className: \"jsx-389275926\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"This poll expired \", moment(props.expiry).fromNow()), !expired && __jsx(\"span\", {\n    className: \"jsx-389275926\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"This poll expires at \", moment(props.expiry).format('LLL')), props.currentUserId == props.userId && __jsx(\"strong\", {\n    className: \"jsx-389275926\" + \" \" + \"button ml-10 color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Update\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    className: \"jsx-389275926\" + \" \" + \"button ml-10 color-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/components/poll.component.js"],"names":["React","useState","useEffect","Progress","Button","moment","PollComponent","props","complete","setComplete","total","setTotal","highest","setHighest","expired","setExpired","answerQuestion","questionId","console","log","answerCountHighest","questions","map","question","answers","answer","user_id","currentUserId","filter","question_id","id","length","expiry","isBefore","title","description","index","text","height","percentage","Math","floor","color","fromNow","format","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Progress, Button } from '@weekday/elements'\nimport moment from 'moment'\n\nexport default function PollComponent(props) {\n  const [complete, setComplete] = useState(false)\n  const [total, setTotal] = useState(0)\n  const [highest, setHighest] = useState(0)\n  const [expired, setExpired] = useState(0)\n\n  const answerQuestion = async (questionId) => {\n    console.log(questionId)\n    setComplete(true)\n  }\n\n  useEffect(() => {\n    let answerCountHighest = 0\n\n    props.questions.map(question => {\n      // See if this user has completed the poll\n      props.answers.map(answer => {\n        if (answer.user_id == props.currentUserId) setComplete(true)\n      })\n\n      // Set the score for the highest amount of votes\n      answerCountHighest = props.answers.filter(answer => answer.question_id == question.id).length\n    })\n\n    setTotal(props.answers.length)\n    setHighest(answerCountHighest)\n    setExpired(moment(props.expiry).isBefore(moment()))\n  }, [])\n\n  return (\n    <React.Fragment>\n      <style jsx>{`\n        .poll-container {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .poll-inner {\n          flex: 1;\n          flex-direction: column;\n          display: flex;\n          align-items: center;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .progress-container {\n          margin-bottom: 5px;\n          width: 100%;\n        }\n      `}</style>\n\n      <div className=\"poll-container\">\n        <div className=\"poll-inner\">\n          <div className=\"h4 color-d3 text-left w-100 mb-0\">{props.title}</div>\n          <div className=\"h5 color-d0 text-left w-100 mb-10\">{props.description}</div>\n\n          {!complete && !expired &&\n            <React.Fragment>\n              {props.questions.map((question, index) => {\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Button\n                      text={question.text}\n                      theme=\"blue-border\"\n                      size=\"full-width\"\n                      style={{ height: 35 }}\n                      onClick={() => answerQuestion(question.id)}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          {(complete || expired) &&\n            <React.Fragment>\n              {props.questions.map((question, index) => {\n                const answers = props.answers.filter(answer => answer.question_id == question.id)\n                const percentage = Math.floor((answers.length / total) * 100)\n                const color = answers.length >= highest ? '#e9edf2' : '#f0f2f5'\n\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Progress\n                      percentage={percentage}\n                      color={color}\n                      text={question.text}\n                      labels={true}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"p color-d1 text-left w-100 mt-5\">\n            {expired &&\n              <span>This poll expired {moment(props.expiry).fromNow()}</span>\n            }\n            {!expired &&\n              <span>This poll expires at {moment(props.expiry).format('LLL')}</span>\n            }\n            {props.currentUserId == props.userId &&\n              <strong className=\"button ml-10 color-blue\">Update</strong>\n            }\n            {props.currentUserId == props.userId &&\n              <strong className=\"button ml-10 color-red\">Delete</strong>\n            }\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}