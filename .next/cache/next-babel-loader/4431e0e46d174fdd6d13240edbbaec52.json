{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, withRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport withData from '../config';\nimport PollComponent from '../components/poll.component';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\nconst UPDATE_POLL = gql`\n  mutation update_polls($id: Int, $changes: polls_set_input) {\n    update_polls(\n      where: {id: {_eq: $id}},\n      _set: $changes\n    ) {\n      affected_rows\n      returning {\n        id\n        title\n        description\n      }\n    }\n  }\n`;\nconst ADD_POLL = gql`\n  mutation add_poll($objects: [polls_insert_input!]!) {\n    insert_polls(objects: $objects) {\n      returning {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction Index(props) {\n  const {\n    router: {\n      query: {\n        payload\n      }\n    }\n  } = props;\n  const decodedPayload = decodeURI(payload);\n  const base64Payload = Buffer.from(decodedPayload, 'base64');\n  console.log(base64Payload);\n  console.log(encodeURI(Buffer(_JSON$stringify({\n    userId: '5db7e3c98476242154d43181',\n    channelId: '5db87f04db059a6d8dc8d068'\n  }), 'base64')));\n  const {\n    0: query,\n    1: setQuery\n  } = useState(null);\n  const {\n    0: userId,\n    1: setUserId\n  } = useState('');\n  const {\n    0: channelId,\n    1: setChannelId\n  } = useState('');\n  const [addPoll, addData] = useMutation(ADD_POLL);\n  const [updatePoll, updateData] = useMutation(UPDATE_POLL);\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL);\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(gql`\n    subscription {\n      polls(where: { channel_id: { _eq: \"5db87f04db059a6d8dc8d068\" } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        questions\n        answers {\n          question_id\n          user_id\n        }\n      }\n    }\n  `);\n  if (data) console.log(data.polls);\n  useEffect(() => {\n    // const { router: { query: { payload } }} = props;\n    const payload = btoa(_JSON$stringify({\n      userId: '5db7e3c98476242154d43181',\n      channelId: '5db87f04db059a6d8dc8d068'\n    }));\n    const parsedPayload = JSON.parse(atob(payload));\n    setUserId(parsedPayload.userId);\n    setChannelId(parsedPayload.channelId);\n    setQuery(gql`\n    \tquery {\n    \t  polls {\n    \t    id\n    \t    title\n          description\n          user_id\n          channel_id\n          expiry\n          questions\n          answers {\n            question_id\n            user_id\n          }\n    \t  }\n    \t}\n    `);\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Polls\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/css/styles.css\",\n    rel: \"stylesheet\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/images/favicon.png\",\n    rel: \"shortcut icon\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1390389061\",\n    __self: this\n  }, \"*{margin:0px;padding:0px;}body{background:white;}.container{background:white;width:100%;height:100%;position:absolute;left:0px;top:0px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.error{position:absolute;top:0px;left:0px;width:100%;}.polls-listing-container{-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;padding:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/pages/index.js */\"), query && __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"container column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"polls-listing-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(Query, {\n    query: query,\n    fetchPolicy: 'cache-and-network',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, ({\n    loading,\n    data,\n    error\n  }) => {\n    if (loading) return __jsx(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    });\n    if (error) return __jsx(\"div\", {\n      className: \"jsx-1390389061\" + \" \" + \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(Error, {\n      message: \"Error loading polls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })); // If no polls exist\n\n    if (data.polls.length == 0) {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: \"../static/images/no-polls.png\",\n        width: \"60%\",\n        className: \"jsx-1390389061\" + \" \" + \"mb-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"jsx-1390389061\" + \" \" + \"h3 mb-20 pl-20 pr-20 color-d2 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"There are no polls\"), __jsx(\"div\", {\n        className: \"jsx-1390389061\" + \" \" + \"h5 mb-20 pl-20 pr-20 color-d0 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"There are no polls for this channel. Click on the button below to create your first poll.\"));\n    } // If there are\n\n\n    return data.polls.map((poll, index) => {\n      return __jsx(PollComponent, {\n        key: index,\n        expiry: poll.expiry,\n        title: poll.title,\n        userId: poll.user_id,\n        currentUserId: userId,\n        description: poll.description,\n        questions: poll.questions,\n        answers: poll.answers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      });\n    });\n  }), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"row justify-content-center mt-30 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Create a poll\",\n    onClick: () => addPoll({\n      variables: {\n        objects: [{\n          title: 'cool',\n          description: 'Nice',\n          channel_id: '007'\n        }]\n      }\n    }),\n    className: \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Delete a poll\",\n    onClick: () => deletePoll({\n      variables: {\n        id: 3\n      }\n    }),\n    className: \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Update a poll\",\n    onClick: () => updatePoll({\n      variables: {\n        id: 1,\n        changes: {\n          title: 'Updated....'\n        }\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  })))));\n}\n\nIndex.getInitialProps = context => {\n  const {\n    query: {\n      payload\n    }\n  } = context;\n  return {\n    cool: true\n  };\n};\n\nexport default withData(withRouter(Index));","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/pages/index.js"],"names":["React","useState","useEffect","useRouter","withRouter","Head","fetch","Button","Error","Loading","Notification","Spinner","gql","Query","withData","PollComponent","useMutation","useSubscription","DELETE_POLL","UPDATE_POLL","ADD_POLL","Index","props","router","query","payload","decodedPayload","decodeURI","base64Payload","Buffer","from","console","log","encodeURI","userId","channelId","setQuery","setUserId","setChannelId","addPoll","addData","updatePoll","updateData","deletePoll","deleteData","loading","error","data","polls","btoa","parsedPayload","JSON","parse","atob","length","map","poll","index","expiry","title","user_id","description","questions","answers","variables","objects","channel_id","id","changes","getInitialProps","context","cool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter, withRouter } from 'next/router'\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport withData from '../config'\nimport PollComponent from '../components/poll.component'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\n\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nconst UPDATE_POLL = gql`\n  mutation update_polls($id: Int, $changes: polls_set_input) {\n    update_polls(\n      where: {id: {_eq: $id}},\n      _set: $changes\n    ) {\n      affected_rows\n      returning {\n        id\n        title\n        description\n      }\n    }\n  }\n`;\n\nconst ADD_POLL = gql`\n  mutation add_poll($objects: [polls_insert_input!]!) {\n    insert_polls(objects: $objects) {\n      returning {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction Index(props) {\n  const { router: { query: { payload } }} = props\n  const decodedPayload = decodeURI(payload)\n  const base64Payload = Buffer.from(decodedPayload, 'base64')\n\n  console.log(base64Payload)\n\n  console.log(\n    encodeURI(\n      Buffer(\n        JSON.stringify(\n          { userId: '5db7e3c98476242154d43181', channelId: '5db87f04db059a6d8dc8d068' }\n        ),\n        'base64'\n      )\n    )\n  )\n\n  const [query, setQuery] = useState(null)\n  const [userId, setUserId] = useState('')\n  const [channelId, setChannelId] = useState('')\n  const [addPoll, addData] = useMutation(ADD_POLL)\n  const [updatePoll, updateData] = useMutation(UPDATE_POLL)\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL)\n  const { loading, error, data } = useSubscription(gql`\n    subscription {\n      polls(where: { channel_id: { _eq: \"5db87f04db059a6d8dc8d068\" } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        questions\n        answers {\n          question_id\n          user_id\n        }\n      }\n    }\n  `)\n\n  if (data) console.log(data.polls)\n\n  useEffect(() => {\n    // const { router: { query: { payload } }} = props;\n    const payload = btoa(JSON.stringify({ userId: '5db7e3c98476242154d43181', channelId: '5db87f04db059a6d8dc8d068' }))\n    const parsedPayload = JSON.parse(atob(payload))\n\n    setUserId(parsedPayload.userId)\n    setChannelId(parsedPayload.channelId)\n    setQuery(gql`\n    \tquery {\n    \t  polls {\n    \t    id\n    \t    title\n          description\n          user_id\n          channel_id\n          expiry\n          questions\n          answers {\n            question_id\n            user_id\n          }\n    \t  }\n    \t}\n    `)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Polls</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link href=\"/static/css/styles.css\" rel=\"stylesheet\" />\n        <link href=\"/static/images/favicon.png\" rel=\"shortcut icon\" />\n      </Head>\n\n      <style global jsx>{`\n        * {\n          margin: 0px;\n          padding: 0px;\n        }\n\n        body {\n          background: white;\n        }\n\n        .container {\n          background: white;\n          width: 100%;\n          height: 100%;\n          position: absolute;\n          left: 0px;\n          top: 0px;\n          display: flex;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .error {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          width: 100%;\n        }\n\n        .polls-listing-container {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          align-content: center;\n          justify-content: flex-start;\n          padding: 20px;\n        }\n      `}</style>\n\n      {query &&\n        <div className=\"container column\">\n          <div className=\"polls-listing-container\">\n\n            <Query\n              query={query}\n              fetchPolicy={'cache-and-network'}>\n              {({ loading, data, error }) => {\n                if (loading) return <Spinner />\n                if (error) return <div className=\"error\"><Error message=\"Error loading polls\" /></div>\n\n\n                // If no polls exist\n                if (data.polls.length == 0) {\n                  return (\n                    <React.Fragment>\n                      <img src=\"../static/images/no-polls.png\" width=\"60%\" className=\"mb-30\"/>\n                      <div className=\"h3 mb-20 pl-20 pr-20 color-d2 text-center\">There are no polls</div>\n                      <div className=\"h5 mb-20 pl-20 pr-20 color-d0 text-center\">There are no polls for this channel. Click on the button below to create your first poll.</div>\n                    </React.Fragment>\n                  )\n                }\n\n                // If there are\n                return data.polls.map((poll, index) => {\n                  return (\n                    <PollComponent\n                      key={index}\n                      expiry={poll.expiry}\n                      title={poll.title}\n                      userId={poll.user_id}\n                      currentUserId={userId}\n                      description={poll.description}\n                      questions={poll.questions}\n                      answers={poll.answers}\n                    />\n                  )\n                })\n              }}\n            </Query>\n\n            <div className=\"row justify-content-center mt-30 w-100\">\n              <Button\n                size=\"small\"\n                theme=\"blue-border\"\n                text=\"Create a poll\"\n                onClick={() => addPoll({ variables: { objects: [{ title: 'cool', description: 'Nice', channel_id: '007' }] } })}\n                className=\"mr-10\"\n              />\n              <Button\n                size=\"small\"\n                theme=\"blue-border\"\n                text=\"Delete a poll\"\n                onClick={() => deletePoll({ variables: { id: 3 } })}\n                className=\"mr-10\"\n              />\n              <Button\n                size=\"small\"\n                theme=\"blue-border\"\n                text=\"Update a poll\"\n                onClick={() => updatePoll({ variables: { id: 1, changes: { title: 'Updated....' } } })}\n              />\n            </div>\n          </div>\n        </div>\n      }\n    </React.Fragment>\n  )\n}\n\nIndex.getInitialProps = (context) => {\n  const { query: { payload } } = context;\n\n  return {\n    cool: true\n  }\n}\n\nexport default withData(withRouter(Index))\n"]},"metadata":{},"sourceType":"module"}