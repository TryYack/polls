{"ast":null,"code":"var _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/components/poll.component.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Progress, Button } from '@weekday/elements';\nimport moment from 'moment';\nexport default function PollComponent(props) {\n  const {\n    0: complete,\n    1: setComplete\n  } = useState(false);\n  const {\n    0: total,\n    1: setTotal\n  } = useState(0);\n  const {\n    0: highest,\n    1: setHighest\n  } = useState(0);\n  const {\n    0: expired,\n    1: setExpired\n  } = useState(0);\n  console.log(props);\n\n  const updatePoll = async () => {\n    console.log('Updating');\n  };\n\n  const deletePoll = async () => {\n    if (confirm(\"Are you sure?\")) {\n      console.log('Deleting');\n    } else {\n      console.log('Not deleting');\n    }\n  };\n\n  const answerQuestion = async questionId => {\n    console.log(questionId);\n    setComplete(true);\n  };\n\n  useEffect(() => {\n    let answerCountHighest = 0;\n    props.questions.map(question => {\n      // See if this user has completed the poll\n      props.answers.map(answer => {\n        if (answer.user_id == props.currentUserId) setComplete(true);\n      }); // Set the score for the highest amount of votes\n\n      answerCountHighest = props.answers.filter(answer => answer.question_id == question.id).length;\n    });\n    setTotal(props.answers.length);\n    setHighest(answerCountHighest);\n    setExpired(moment(props.expiry).isBefore(moment()));\n  }, [props]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(_JSXStyle, {\n    id: \"3660888933\",\n    __self: this\n  }, \".poll-container.jsx-3660888933{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:20px;}.poll-inner.jsx-3660888933{-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.progress-container.jsx-3660888933{margin-bottom:5px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvY29tcG9uZW50cy9wb2xsLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRGtCLEFBR3NCLEFBVUosQUFTVyxXQWxCTCxPQW1CRixXQUNiLElBVndCLG9EQVRBLDBCQVVULG9EQVRPLHNCQVVELDJFQVRFLGtCQVVBLDBEQVRFLGtCQVVBLGlGQVRKLGtCQVVyQixDQVRBIiwiZmlsZSI6Ii9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvY29tcG9uZW50cy9wb2xsLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBQcm9ncmVzcywgQnV0dG9uIH0gZnJvbSAnQHdlZWtkYXkvZWxlbWVudHMnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9sbENvbXBvbmVudChwcm9wcykge1xuICBjb25zdCBbY29tcGxldGUsIHNldENvbXBsZXRlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdG90YWwsIHNldFRvdGFsXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFtoaWdoZXN0LCBzZXRIaWdoZXN0XSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFtleHBpcmVkLCBzZXRFeHBpcmVkXSA9IHVzZVN0YXRlKDApXG5cbiAgY29uc29sZS5sb2cocHJvcHMpXG5cbiAgY29uc3QgdXBkYXRlUG9sbCA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnVXBkYXRpbmcnKVxuICB9XG5cbiAgY29uc3QgZGVsZXRlUG9sbCA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoY29uZmlybShcIkFyZSB5b3Ugc3VyZT9cIikpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdEZWxldGluZycpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKCdOb3QgZGVsZXRpbmcnKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGFuc3dlclF1ZXN0aW9uID0gYXN5bmMgKHF1ZXN0aW9uSWQpID0+IHtcbiAgICBjb25zb2xlLmxvZyhxdWVzdGlvbklkKVxuICAgIHNldENvbXBsZXRlKHRydWUpXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBhbnN3ZXJDb3VudEhpZ2hlc3QgPSAwXG5cbiAgICBwcm9wcy5xdWVzdGlvbnMubWFwKHF1ZXN0aW9uID0+IHtcbiAgICAgIC8vIFNlZSBpZiB0aGlzIHVzZXIgaGFzIGNvbXBsZXRlZCB0aGUgcG9sbFxuICAgICAgcHJvcHMuYW5zd2Vycy5tYXAoYW5zd2VyID0+IHtcbiAgICAgICAgaWYgKGFuc3dlci51c2VyX2lkID09IHByb3BzLmN1cnJlbnRVc2VySWQpIHNldENvbXBsZXRlKHRydWUpXG4gICAgICB9KVxuXG4gICAgICAvLyBTZXQgdGhlIHNjb3JlIGZvciB0aGUgaGlnaGVzdCBhbW91bnQgb2Ygdm90ZXNcbiAgICAgIGFuc3dlckNvdW50SGlnaGVzdCA9IHByb3BzLmFuc3dlcnMuZmlsdGVyKGFuc3dlciA9PiBhbnN3ZXIucXVlc3Rpb25faWQgPT0gcXVlc3Rpb24uaWQpLmxlbmd0aFxuICAgIH0pXG5cbiAgICBzZXRUb3RhbChwcm9wcy5hbnN3ZXJzLmxlbmd0aClcbiAgICBzZXRIaWdoZXN0KGFuc3dlckNvdW50SGlnaGVzdClcbiAgICBzZXRFeHBpcmVkKG1vbWVudChwcm9wcy5leHBpcnkpLmlzQmVmb3JlKG1vbWVudCgpKSlcbiAgfSwgW3Byb3BzXSlcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnBvbGwtY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAucG9sbC1pbm5lciB7XG4gICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAucHJvZ3Jlc3MtY29udGFpbmVyIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb2xsLWNvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvbGwtaW5uZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImg0IGNvbG9yLWQzIHRleHQtbGVmdCB3LTEwMCBtYi0wXCI+e3Byb3BzLnRpdGxlfTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaDUgY29sb3ItZDAgdGV4dC1sZWZ0IHctMTAwIG1iLTEwXCI+e3Byb3BzLmRlc2NyaXB0aW9ufTwvZGl2PlxuXG4gICAgICAgICAgeyghY29tcGxldGUgJiYgIWV4cGlyZWQpICYmXG4gICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgIHtwcm9wcy5xdWVzdGlvbnMubWFwKChxdWVzdGlvbiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy1jb250YWluZXJcIiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e3F1ZXN0aW9uLnRleHR9XG4gICAgICAgICAgICAgICAgICAgICAgdGhlbWU9XCJibHVlLWJvcmRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cImZ1bGwtd2lkdGhcIlxuICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogMzUgfX1cbiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBhbnN3ZXJRdWVzdGlvbihxdWVzdGlvbi5pZCl9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB7KGNvbXBsZXRlIHx8IGV4cGlyZWQpICYmXG4gICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgIHtwcm9wcy5xdWVzdGlvbnMubWFwKChxdWVzdGlvbiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXJzID0gcHJvcHMuYW5zd2Vycy5maWx0ZXIoYW5zd2VyID0+IGFuc3dlci5xdWVzdGlvbl9pZCA9PSBxdWVzdGlvbi5pZClcbiAgICAgICAgICAgICAgICBjb25zdCBwZXJjZW50YWdlID0gTWF0aC5mbG9vcigoYW5zd2Vycy5sZW5ndGggLyB0b3RhbCkgKiAxMDApXG4gICAgICAgICAgICAgICAgY29uc3QgY29sb3IgPSBhbnN3ZXJzLmxlbmd0aCA+PSBoaWdoZXN0ID8gJyNlOWVkZjInIDogJyNmMGYyZjUnXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy1jb250YWluZXJcIiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPFByb2dyZXNzXG4gICAgICAgICAgICAgICAgICAgICAgcGVyY2VudGFnZT17cGVyY2VudGFnZX1cbiAgICAgICAgICAgICAgICAgICAgICBjb2xvcj17Y29sb3J9XG4gICAgICAgICAgICAgICAgICAgICAgdGV4dD17cXVlc3Rpb24udGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbHM9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAgY29sb3ItZDEgdGV4dC1sZWZ0IHctMTAwIG10LTVcIj5cbiAgICAgICAgICAgIHtleHBpcmVkICYmXG4gICAgICAgICAgICAgIDxzcGFuPlRoaXMgcG9sbCBleHBpcmVkIHttb21lbnQocHJvcHMuZXhwaXJ5KS5mcm9tTm93KCl9PC9zcGFuPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeyFleHBpcmVkICYmXG4gICAgICAgICAgICAgIDxzcGFuPlRoaXMgcG9sbCBleHBpcmVzIGF0IHttb21lbnQocHJvcHMuZXhwaXJ5KS5mb3JtYXQoJ0xMJyl9PC9zcGFuPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAge3Byb3BzLmN1cnJlbnRVc2VySWQgPT0gcHJvcHMudXNlcklkICYmXG4gICAgICAgICAgICAgIDxzdHJvbmcgY2xhc3NOYW1lPVwiYnV0dG9uIG1sLTEwIGNvbG9yLWJsdWVcIiBvbkNsaWNrPXt1cGRhdGVQb2xsfT5VcGRhdGU8L3N0cm9uZz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHtwcm9wcy5jdXJyZW50VXNlcklkID09IHByb3BzLnVzZXJJZCAmJlxuICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzTmFtZT1cImJ1dHRvbiBtbC0xMCBjb2xvci1yZWRcIiBvbkNsaWNrPXtkZWxldGVQb2xsfT5EZWxldGU8L3N0cm9uZz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApXG59XG4iXX0= */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/components/poll.component.js */\"), __jsx(\"div\", {\n    className: \"jsx-3660888933\" + \" \" + \"poll-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3660888933\" + \" \" + \"poll-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-3660888933\" + \" \" + \"h4 color-d3 text-left w-100 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: \"jsx-3660888933\" + \" \" + \"h5 color-d0 text-left w-100 mb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.description), !complete && !expired && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.questions.map((question, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-3660888933\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(Button, {\n      text: question.text,\n      theme: \"blue-border\",\n      size: \"full-width\",\n      style: {\n        height: 35\n      },\n      onClick: () => answerQuestion(question.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  })), (complete || expired) && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, props.questions.map((question, index) => {\n    const answers = props.answers.filter(answer => answer.question_id == question.id);\n    const percentage = Math.floor(answers.length / total * 100);\n    const color = answers.length >= highest ? '#e9edf2' : '#f0f2f5';\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-3660888933\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(Progress, {\n      percentage: percentage,\n      color: color,\n      text: question.text,\n      labels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    className: \"jsx-3660888933\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, expired && __jsx(\"span\", {\n    className: \"jsx-3660888933\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"This poll expired \", moment(props.expiry).fromNow()), !expired && __jsx(\"span\", {\n    className: \"jsx-3660888933\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"This poll expires at \", moment(props.expiry).format('LL')), props.currentUserId == props.userId && __jsx(\"strong\", {\n    onClick: updatePoll,\n    className: \"jsx-3660888933\" + \" \" + \"button ml-10 color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Update\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    onClick: deletePoll,\n    className: \"jsx-3660888933\" + \" \" + \"button ml-10 color-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/components/poll.component.js"],"names":["React","useState","useEffect","Progress","Button","moment","PollComponent","props","complete","setComplete","total","setTotal","highest","setHighest","expired","setExpired","console","log","updatePoll","deletePoll","confirm","answerQuestion","questionId","answerCountHighest","questions","map","question","answers","answer","user_id","currentUserId","filter","question_id","id","length","expiry","isBefore","title","description","index","text","height","percentage","Math","floor","color","fromNow","format","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Progress, Button } from '@weekday/elements'\nimport moment from 'moment'\n\nexport default function PollComponent(props) {\n  const [complete, setComplete] = useState(false)\n  const [total, setTotal] = useState(0)\n  const [highest, setHighest] = useState(0)\n  const [expired, setExpired] = useState(0)\n\n  console.log(props)\n\n  const updatePoll = async () => {\n    console.log('Updating')\n  }\n\n  const deletePoll = async () => {\n    if (confirm(\"Are you sure?\")) {\n      console.log('Deleting')\n    } else {\n      console.log('Not deleting')\n    }\n  }\n\n  const answerQuestion = async (questionId) => {\n    console.log(questionId)\n    setComplete(true)\n  }\n\n  useEffect(() => {\n    let answerCountHighest = 0\n\n    props.questions.map(question => {\n      // See if this user has completed the poll\n      props.answers.map(answer => {\n        if (answer.user_id == props.currentUserId) setComplete(true)\n      })\n\n      // Set the score for the highest amount of votes\n      answerCountHighest = props.answers.filter(answer => answer.question_id == question.id).length\n    })\n\n    setTotal(props.answers.length)\n    setHighest(answerCountHighest)\n    setExpired(moment(props.expiry).isBefore(moment()))\n  }, [props])\n\n  return (\n    <React.Fragment>\n      <style jsx>{`\n        .poll-container {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n          margin-bottom: 20px;\n        }\n\n        .poll-inner {\n          flex: 1;\n          flex-direction: column;\n          display: flex;\n          align-items: center;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .progress-container {\n          margin-bottom: 5px;\n          width: 100%;\n        }\n      `}</style>\n\n      <div className=\"poll-container\">\n        <div className=\"poll-inner\">\n          <div className=\"h4 color-d3 text-left w-100 mb-0\">{props.title}</div>\n          <div className=\"h5 color-d0 text-left w-100 mb-10\">{props.description}</div>\n\n          {(!complete && !expired) &&\n            <React.Fragment>\n              {props.questions.map((question, index) => {\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Button\n                      text={question.text}\n                      theme=\"blue-border\"\n                      size=\"full-width\"\n                      style={{ height: 35 }}\n                      onClick={() => answerQuestion(question.id)}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          {(complete || expired) &&\n            <React.Fragment>\n              {props.questions.map((question, index) => {\n                const answers = props.answers.filter(answer => answer.question_id == question.id)\n                const percentage = Math.floor((answers.length / total) * 100)\n                const color = answers.length >= highest ? '#e9edf2' : '#f0f2f5'\n\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Progress\n                      percentage={percentage}\n                      color={color}\n                      text={question.text}\n                      labels={true}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"p color-d1 text-left w-100 mt-5\">\n            {expired &&\n              <span>This poll expired {moment(props.expiry).fromNow()}</span>\n            }\n            {!expired &&\n              <span>This poll expires at {moment(props.expiry).format('LL')}</span>\n            }\n            {props.currentUserId == props.userId &&\n              <strong className=\"button ml-10 color-blue\" onClick={updatePoll}>Update</strong>\n            }\n            {props.currentUserId == props.userId &&\n              <strong className=\"button ml-10 color-red\" onClick={deletePoll}>Delete</strong>\n            }\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}