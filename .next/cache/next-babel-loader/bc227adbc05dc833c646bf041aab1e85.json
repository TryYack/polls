{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/pages/message.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    subscription {\\n      polls(where: { id: { _eq: \", \" } }) {\\n        id\\n        title\\n        description\\n        user_id\\n        channel_id\\n        expiry\\n        options\\n        poll_votes {\\n          user_id\\n          option_id\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\\n    insert_poll_votes(objects: $objects) {\\n      returning {\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, withRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport withData from '../config';\nimport PollComponent from '../components/poll.component';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nwindow.addEventListener('load', function () {\n  console.log('Loaded'); //console.log(document.body.clientHeight, e)\n});\nconsole.log(window);\nvar ADD_VOTE = gql(_templateObject());\n\nfunction Message(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  var query = props.router.query;\n\n  var _useState = useState(query.userId),\n      userId = _useState[0],\n      setUserId = _useState[1];\n\n  var _useState2 = useState(query.channelId),\n      channelId = _useState2[0],\n      setChannelId = _useState2[1];\n\n  var _useState3 = useState(query.payload),\n      pollId = _useState3[0],\n      setPollId = _useState3[1];\n\n  var _useMutation = useMutation(ADD_VOTE),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addVote = _useMutation2[0],\n      addVoteData = _useMutation2[1];\n\n  var _useSubscription = useSubscription(gql(_templateObject2(), pollId)),\n      loading = _useSubscription.loading,\n      error = _useSubscription.error,\n      data = _useSubscription.data;\n\n  useEffect(function () {\n    if (!loading && !error) return;\n    setTimeout(function () {\n      window.location.search.split('&').map(function (q) {\n        var parts = q.split('=');\n\n        if (parts[0] == 'weekdayId') {\n          window.top.postMessage({\n            type: 'weekday',\n            payload: {\n              weekdayId: parts[1],\n              scrollHeight: document.documentElement.scrollHeight\n            }\n          }, '*');\n        }\n      });\n    }, 1050);\n  }, [loading, error]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Polls\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/css/styles.css\",\n    rel: \"stylesheet\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/images/favicon.png\",\n    rel: \"shortcut icon\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1590883482\",\n    __self: this\n  }, \"*{margin:0px;padding:0px;}body{background:white;overflow:scroll;}.container{background:white;padding:20px;}.error{position:absolute;top:0px;left:0px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvcGFnZXMvbWVzc2FnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRnlCLEFBR3NCLEFBS00sQUFLQSxBQUtDLFdBZE4sTUFLSSxBQUtILENBS0wsS0FkVixHQWVXLElBTFgsR0FMQSxFQVdhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2pvZHVwbGVzc2lzL1dvcmsvV2Vla2RheS9wb2xscy9wYWdlcy9tZXNzYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVJvdXRlciwgd2l0aFJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJ1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJ1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCdcbmltcG9ydCB7IEJ1dHRvbiwgRXJyb3IsIExvYWRpbmcsIE5vdGlmaWNhdGlvbiwgU3Bpbm5lciB9IGZyb20gJ0B3ZWVrZGF5L2VsZW1lbnRzJ1xuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSAncmVhY3QtYXBvbGxvJ1xuaW1wb3J0IHdpdGhEYXRhIGZyb20gJy4uL2NvbmZpZydcbmltcG9ydCBQb2xsQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudHMvcG9sbC5jb21wb25lbnQnXG5pbXBvcnQgeyB1c2VNdXRhdGlvbiwgdXNlU3Vic2NyaXB0aW9uIH0gZnJvbSAnQGFwb2xsby9yZWFjdC1ob29rcydcblxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ0xvYWRlZCcpXG4gIC8vY29uc29sZS5sb2coZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQsIGUpXG59KVxuXG5jb25zb2xlLmxvZyh3aW5kb3cpXG5cblxuY29uc3QgQUREX1ZPVEUgPSBncWxgXG4gIG11dGF0aW9uIGFkZF92b3RlKCRvYmplY3RzOiBbcG9sbF92b3Rlc19pbnNlcnRfaW5wdXQhXSEpIHtcbiAgICBpbnNlcnRfcG9sbF92b3RlcyhvYmplY3RzOiAkb2JqZWN0cykge1xuICAgICAgcmV0dXJuaW5nIHtcbiAgICAgICAgaWRcbiAgICAgIH1cbiAgICB9XG4gIH1cbmA7XG5cbmZ1bmN0aW9uIE1lc3NhZ2UocHJvcHMpIHtcbiAgLy8gP3VzZXJJZD01ZGI3ZTNjOTg0NzYyNDIxNTRkNDMxODEmY2hhbm5lbElkPTVkYjg3ZjA0ZGIwNTlhNmQ4ZGM4ZDA2OFxuICBjb25zdCB7IHJvdXRlcjogeyBxdWVyeSB9fSA9IHByb3BzXG4gIGNvbnN0IFt1c2VySWQsIHNldFVzZXJJZF0gPSB1c2VTdGF0ZShxdWVyeS51c2VySWQpXG4gIGNvbnN0IFtjaGFubmVsSWQsIHNldENoYW5uZWxJZF0gPSB1c2VTdGF0ZShxdWVyeS5jaGFubmVsSWQpXG4gIGNvbnN0IFtwb2xsSWQsIHNldFBvbGxJZF0gPSB1c2VTdGF0ZShxdWVyeS5wYXlsb2FkKVxuICBjb25zdCBbYWRkVm90ZSwgYWRkVm90ZURhdGFdID0gdXNlTXV0YXRpb24oQUREX1ZPVEUpXG4gIGNvbnN0IHsgbG9hZGluZywgZXJyb3IsIGRhdGEgfSA9IHVzZVN1YnNjcmlwdGlvbihncWxgXG4gICAgc3Vic2NyaXB0aW9uIHtcbiAgICAgIHBvbGxzKHdoZXJlOiB7IGlkOiB7IF9lcTogJHtwb2xsSWR9IH0gfSkge1xuICAgICAgICBpZFxuICAgICAgICB0aXRsZVxuICAgICAgICBkZXNjcmlwdGlvblxuICAgICAgICB1c2VyX2lkXG4gICAgICAgIGNoYW5uZWxfaWRcbiAgICAgICAgZXhwaXJ5XG4gICAgICAgIG9wdGlvbnNcbiAgICAgICAgcG9sbF92b3RlcyB7XG4gICAgICAgICAgdXNlcl9pZFxuICAgICAgICAgIG9wdGlvbl9pZFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBgKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFsb2FkaW5nICYmICFlcnJvcikgcmV0dXJuXG5cblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zcGxpdCgnJicpLm1hcChxID0+IHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBxLnNwbGl0KCc9JylcblxuICAgICAgICBpZiAocGFydHNbMF0gPT0gJ3dlZWtkYXlJZCcpIHtcbiAgICAgICAgICB3aW5kb3cudG9wLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgIHR5cGU6ICd3ZWVrZGF5JyxcbiAgICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgICAgd2Vla2RheUlkOiBwYXJ0c1sxXSxcbiAgICAgICAgICAgICAgc2Nyb2xsSGVpZ2h0OiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0LFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sICcqJylcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9LCAxMDUwKVxuXG4gIH0sIFtsb2FkaW5nLCBlcnJvcl0pXG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPlBvbGxzPC90aXRsZT5cbiAgICAgICAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cImluaXRpYWwtc2NhbGU9MS4wLCB3aWR0aD1kZXZpY2Utd2lkdGhcIiAvPlxuICAgICAgICA8bGluayBocmVmPVwiL3N0YXRpYy9jc3Mvc3R5bGVzLmNzc1wiIHJlbD1cInN0eWxlc2hlZXRcIiAvPlxuICAgICAgICA8bGluayBocmVmPVwiL3N0YXRpYy9pbWFnZXMvZmF2aWNvbi5wbmdcIiByZWw9XCJzaG9ydGN1dCBpY29uXCIgLz5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgPHN0eWxlIGdsb2JhbCBqc3g+e2BcbiAgICAgICAgKiB7XG4gICAgICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgYm9keSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAuZXJyb3Ige1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDBweDtcbiAgICAgICAgICBsZWZ0OiAwcHg7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cblxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICB7KGxvYWRpbmcgfHwgIWRhdGEpICYmIDxTcGlubmVyIC8+fVxuICAgICAgICB7KChlcnJvciB8fCAhZGF0YSkgJiYgIWxvYWRpbmcpICYmIDxkaXYgY2xhc3NOYW1lPVwiZXJyb3JcIj48RXJyb3IgbWVzc2FnZT1cIkVycm9yIGxvYWRpbmcgcG9sbHNcIiAvPjwvZGl2Pn1cbiAgICAgICAge2RhdGEgJiZcbiAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICB7ZGF0YS5wb2xscy5tYXAoKHBvbGwsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPFBvbGxDb21wb25lbnRcbiAgICAgICAgICAgICAgICAgIHRvb2xzPXtmYWxzZX1cbiAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICAgICAgICBleHBpcnk9e3BvbGwuZXhwaXJ5fVxuICAgICAgICAgICAgICAgICAgdGl0bGU9e3BvbGwudGl0bGV9XG4gICAgICAgICAgICAgICAgICB1c2VySWQ9e3BvbGwudXNlcl9pZH1cbiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtwb2xsLmRlc2NyaXB0aW9ufVxuICAgICAgICAgICAgICAgICAgb3B0aW9ucz17cG9sbC5vcHRpb25zfVxuICAgICAgICAgICAgICAgICAgcG9sbFZvdGVzPXtwb2xsLnBvbGxfdm90ZXN9XG4gICAgICAgICAgICAgICAgICBjdXJyZW50VXNlcklkPXt1c2VySWR9XG4gICAgICAgICAgICAgICAgICBvblN1Ym1pdD17KG9wdGlvbklkKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGFkZFZvdGUoe1xuICAgICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0czogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uX2lkOiBvcHRpb25JZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2xsX2lkOiBwb2xsSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICB9XG4gICAgICA8L2Rpdj5cbiAgICA8L1JlYWN0LkZyYWdtZW50PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhEYXRhKHdpdGhSb3V0ZXIoTWVzc2FnZSkpXG4iXX0= */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/pages/message.js */\"), __jsx(\"div\", {\n    className: \"jsx-1590883482\" + \" \" + \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, (loading || !data) && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), (error || !data) && !loading && __jsx(\"div\", {\n    className: \"jsx-1590883482\" + \" \" + \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Error, {\n    message: \"Error loading polls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), data && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, data.polls.map(function (poll, index) {\n    return __jsx(PollComponent, {\n      tools: false,\n      key: index,\n      expiry: poll.expiry,\n      title: poll.title,\n      userId: poll.user_id,\n      description: poll.description,\n      options: poll.options,\n      pollVotes: poll.poll_votes,\n      currentUserId: userId,\n      onSubmit: function onSubmit(optionId) {\n        addVote({\n          variables: {\n            objects: [{\n              option_id: optionId,\n              poll_id: pollId,\n              user_id: userId\n            }]\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    });\n  }))));\n}\n\nexport default withData(withRouter(Message));","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/pages/message.js"],"names":["React","useState","useEffect","useRouter","withRouter","Head","fetch","Button","Error","Loading","Notification","Spinner","gql","Query","withData","PollComponent","useMutation","useSubscription","window","addEventListener","console","log","ADD_VOTE","Message","props","query","router","userId","setUserId","channelId","setChannelId","payload","pollId","setPollId","addVote","addVoteData","loading","error","data","setTimeout","location","search","split","map","q","parts","top","postMessage","type","weekdayId","scrollHeight","document","documentElement","polls","poll","index","expiry","title","user_id","description","options","poll_votes","optionId","variables","objects","option_id","poll_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter, withRouter } from 'next/router'\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport withData from '../config'\nimport PollComponent from '../components/poll.component'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\n\n\nwindow.addEventListener('load', () => {\n  console.log('Loaded')\n  //console.log(document.body.clientHeight, e)\n})\n\nconsole.log(window)\n\n\nconst ADD_VOTE = gql`\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\n    insert_poll_votes(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nfunction Message(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  const { router: { query }} = props\n  const [userId, setUserId] = useState(query.userId)\n  const [channelId, setChannelId] = useState(query.channelId)\n  const [pollId, setPollId] = useState(query.payload)\n  const [addVote, addVoteData] = useMutation(ADD_VOTE)\n  const { loading, error, data } = useSubscription(gql`\n    subscription {\n      polls(where: { id: { _eq: ${pollId} } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        options\n        poll_votes {\n          user_id\n          option_id\n        }\n      }\n    }\n  `)\n\n  useEffect(() => {\n    if (!loading && !error) return\n\n\n    setTimeout(() => {\n      window.location.search.split('&').map(q => {\n        const parts = q.split('=')\n\n        if (parts[0] == 'weekdayId') {\n          window.top.postMessage({\n            type: 'weekday',\n            payload: {\n              weekdayId: parts[1],\n              scrollHeight: document.documentElement.scrollHeight,\n            }\n          }, '*')\n        }\n      })\n    }, 1050)\n\n  }, [loading, error])\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Polls</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link href=\"/static/css/styles.css\" rel=\"stylesheet\" />\n        <link href=\"/static/images/favicon.png\" rel=\"shortcut icon\" />\n      </Head>\n\n      <style global jsx>{`\n        * {\n          margin: 0px;\n          padding: 0px;\n        }\n\n        body {\n          background: white;\n          overflow: scroll;\n        }\n\n        .container {\n          background: white;\n          padding: 20px;\n        }\n\n        .error {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          width: 100%;\n        }\n      `}</style>\n\n\n      <div className=\"container\">\n        {(loading || !data) && <Spinner />}\n        {((error || !data) && !loading) && <div className=\"error\"><Error message=\"Error loading polls\" /></div>}\n        {data &&\n          <React.Fragment>\n            {data.polls.map((poll, index) => {\n              return (\n                <PollComponent\n                  tools={false}\n                  key={index}\n                  expiry={poll.expiry}\n                  title={poll.title}\n                  userId={poll.user_id}\n                  description={poll.description}\n                  options={poll.options}\n                  pollVotes={poll.poll_votes}\n                  currentUserId={userId}\n                  onSubmit={(optionId) => {\n                    addVote({\n                      variables: {\n                        objects: [\n                          {\n                            option_id: optionId,\n                            poll_id: pollId,\n                            user_id: userId,\n                          }\n                        ]\n                      }\n                    })\n                  }}\n                />\n              )\n            })}\n          </React.Fragment>\n        }\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withData(withRouter(Message))\n"]},"metadata":{},"sourceType":"module"}