{"ast":null,"code":"import { withData } from 'next-apollo';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split } from 'apollo-link';\nimport { getMainDefinition } from 'apollo-utilities';\nimport ws from 'ws';\n\nvar WebSocketClient = require('websocket').client;\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:8080/v1/graphql`,\n  options: {\n    reconnect: true\n  },\n  webSocketImpl: WebSocketClient\n});\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:8080/v1/graphql'\n});\nconst link = split(({\n  query\n}) => {\n  const {\n    kind,\n    operation\n  } = getMainDefinition(query);\n  return kind === 'OperationDefinition' && operation === 'subscription';\n}, wsLink, httpLink);\nconst config = {\n  link\n};\nexport default withData(config);","map":{"version":3,"sources":["/Users/joduplessis/Work/Yack/polls/config.js"],"names":["withData","HttpLink","WebSocketLink","split","getMainDefinition","ws","WebSocketClient","require","client","wsLink","uri","options","reconnect","webSocketImpl","httpLink","link","query","kind","operation","config"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,EAAP,MAAe,IAAf;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAA3C;;AAEA,MAAMC,MAAM,GAAG,IAAIP,aAAJ,CAAkB;AAC/BQ,EAAAA,GAAG,EAAG,gCADyB;AAE/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ,GAFsB;AAK/BC,EAAAA,aAAa,EAAEP;AALgB,CAAlB,CAAf;AAQA,MAAMQ,QAAQ,GAAG,IAAIb,QAAJ,CAAa;AAC5BS,EAAAA,GAAG,EAAE;AADuB,CAAb,CAAjB;AAIA,MAAMK,IAAI,GAAGZ,KAAK,CAChB,CAAC;AAAEa,EAAAA;AAAF,CAAD,KAAe;AACb,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBd,iBAAiB,CAACY,KAAD,CAA7C;AACA,SAAOC,IAAI,KAAK,qBAAT,IAAkCC,SAAS,KAAK,cAAvD;AACD,CAJe,EAKhBT,MALgB,EAMhBK,QANgB,CAAlB;AASA,MAAMK,MAAM,GAAG;AAAEJ,EAAAA;AAAF,CAAf;AAEA,eAAef,QAAQ,CAACmB,MAAD,CAAvB","sourcesContent":["import { withData } from 'next-apollo'\nimport { HttpLink } from 'apollo-link-http'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { split } from 'apollo-link'\nimport { getMainDefinition } from 'apollo-utilities'\nimport ws from 'ws'\nvar WebSocketClient = require('websocket').client\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:8080/v1/graphql`,\n  options: {\n    reconnect: true\n  },\n  webSocketImpl: WebSocketClient\n})\n\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:8080/v1/graphql',\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  httpLink,\n)\n\nconst config = { link }\n\nexport default withData(config)\n"]},"metadata":{},"sourceType":"module"}