{"ast":null,"code":"var _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/pages/message.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, withRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport withData from '../config';\nimport PollComponent from '../components/poll.component';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nimport { adjustAppHeight } from '../util';\nconst ADD_VOTE = gql`\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\n    insert_poll_votes(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nfunction Message(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  const {\n    router: {\n      query\n    }\n  } = props;\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(query.userId);\n  const {\n    0: channelId,\n    1: setChannelId\n  } = useState(query.channelId);\n  const {\n    0: pollId,\n    1: setPollId\n  } = useState(query.payload);\n  const [addVote, addVoteData] = useMutation(ADD_VOTE);\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(gql`\n    subscription {\n      polls(where: { id: { _eq: ${pollId} } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        options\n        poll_votes {\n          user_id\n          option_id\n        }\n      }\n    }\n  `);\n  useEffect(() => {\n    adjustAppHeight();\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Polls\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/css/styles.css\",\n    rel: \"stylesheet\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/images/favicon.png\",\n    rel: \"shortcut icon\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1590883482\",\n    __self: this\n  }, \"*{margin:0px;padding:0px;}body{background:white;overflow:scroll;}.container{background:white;padding:20px;}.error{position:absolute;top:0px;left:0px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvcGFnZXMvbWVzc2FnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RHlCLEFBR3NCLEFBS00sQUFLQSxBQUtDLFdBZE4sTUFLSSxBQUtILENBS0wsS0FkVixHQWVXLElBTFgsR0FMQSxFQVdhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2pvZHVwbGVzc2lzL1dvcmsvV2Vla2RheS9wb2xscy9wYWdlcy9tZXNzYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVJvdXRlciwgd2l0aFJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJ1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJ1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCdcbmltcG9ydCB7IEJ1dHRvbiwgRXJyb3IsIExvYWRpbmcsIE5vdGlmaWNhdGlvbiwgU3Bpbm5lciB9IGZyb20gJ0B3ZWVrZGF5L2VsZW1lbnRzJ1xuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSAncmVhY3QtYXBvbGxvJ1xuaW1wb3J0IHdpdGhEYXRhIGZyb20gJy4uL2NvbmZpZydcbmltcG9ydCBQb2xsQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudHMvcG9sbC5jb21wb25lbnQnXG5pbXBvcnQgeyB1c2VNdXRhdGlvbiwgdXNlU3Vic2NyaXB0aW9uIH0gZnJvbSAnQGFwb2xsby9yZWFjdC1ob29rcydcbmltcG9ydCB7IGFkanVzdEFwcEhlaWdodCB9IGZyb20gJy4uL3V0aWwnXG5cbmNvbnN0IEFERF9WT1RFID0gZ3FsYFxuICBtdXRhdGlvbiBhZGRfdm90ZSgkb2JqZWN0czogW3BvbGxfdm90ZXNfaW5zZXJ0X2lucHV0IV0hKSB7XG4gICAgaW5zZXJ0X3BvbGxfdm90ZXMob2JqZWN0czogJG9iamVjdHMpIHtcbiAgICAgIHJldHVybmluZyB7XG4gICAgICAgIGlkXG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG5mdW5jdGlvbiBNZXNzYWdlKHByb3BzKSB7XG4gIC8vID91c2VySWQ9NWRiN2UzYzk4NDc2MjQyMTU0ZDQzMTgxJmNoYW5uZWxJZD01ZGI4N2YwNGRiMDU5YTZkOGRjOGQwNjhcbiAgY29uc3QgeyByb3V0ZXI6IHsgcXVlcnkgfX0gPSBwcm9wc1xuICBjb25zdCBbdXNlcklkLCBzZXRVc2VySWRdID0gdXNlU3RhdGUocXVlcnkudXNlcklkKVxuICBjb25zdCBbY2hhbm5lbElkLCBzZXRDaGFubmVsSWRdID0gdXNlU3RhdGUocXVlcnkuY2hhbm5lbElkKVxuICBjb25zdCBbcG9sbElkLCBzZXRQb2xsSWRdID0gdXNlU3RhdGUocXVlcnkucGF5bG9hZClcbiAgY29uc3QgW2FkZFZvdGUsIGFkZFZvdGVEYXRhXSA9IHVzZU11dGF0aW9uKEFERF9WT1RFKVxuICBjb25zdCB7IGxvYWRpbmcsIGVycm9yLCBkYXRhIH0gPSB1c2VTdWJzY3JpcHRpb24oZ3FsYFxuICAgIHN1YnNjcmlwdGlvbiB7XG4gICAgICBwb2xscyh3aGVyZTogeyBpZDogeyBfZXE6ICR7cG9sbElkfSB9IH0pIHtcbiAgICAgICAgaWRcbiAgICAgICAgdGl0bGVcbiAgICAgICAgZGVzY3JpcHRpb25cbiAgICAgICAgdXNlcl9pZFxuICAgICAgICBjaGFubmVsX2lkXG4gICAgICAgIGV4cGlyeVxuICAgICAgICBvcHRpb25zXG4gICAgICAgIHBvbGxfdm90ZXMge1xuICAgICAgICAgIHVzZXJfaWRcbiAgICAgICAgICBvcHRpb25faWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgYClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGFkanVzdEFwcEhlaWdodCgpXG4gIH0sIFtdKVxuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5Qb2xsczwvdGl0bGU+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJpbml0aWFsLXNjYWxlPTEuMCwgd2lkdGg9ZGV2aWNlLXdpZHRoXCIgLz5cbiAgICAgICAgPGxpbmsgaHJlZj1cIi9zdGF0aWMvY3NzL3N0eWxlcy5jc3NcIiByZWw9XCJzdHlsZXNoZWV0XCIgLz5cbiAgICAgICAgPGxpbmsgaHJlZj1cIi9zdGF0aWMvaW1hZ2VzL2Zhdmljb24ucG5nXCIgcmVsPVwic2hvcnRjdXQgaWNvblwiIC8+XG4gICAgICA8L0hlYWQ+XG5cbiAgICAgIDxzdHlsZSBnbG9iYWwganN4PntgXG4gICAgICAgICoge1xuICAgICAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIGJvZHkge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gICAgICAgIH1cblxuICAgICAgICAuY29udGFpbmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLmVycm9yIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAwcHg7XG4gICAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG5cblxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgeyhsb2FkaW5nIHx8ICFkYXRhKSAmJiA8U3Bpbm5lciAvPn1cbiAgICAgICAgeygoZXJyb3IgfHwgIWRhdGEpICYmICFsb2FkaW5nKSAmJiA8ZGl2IGNsYXNzTmFtZT1cImVycm9yXCI+PEVycm9yIG1lc3NhZ2U9XCJFcnJvciBsb2FkaW5nIHBvbGxzXCIgLz48L2Rpdj59XG4gICAgICAgIHtkYXRhICYmXG4gICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAge2RhdGEucG9sbHMubWFwKChwb2xsLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxQb2xsQ29tcG9uZW50XG4gICAgICAgICAgICAgICAgICB0b29scz17ZmFsc2V9XG4gICAgICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICAgICAgZXhwaXJ5PXtwb2xsLmV4cGlyeX1cbiAgICAgICAgICAgICAgICAgIHRpdGxlPXtwb2xsLnRpdGxlfVxuICAgICAgICAgICAgICAgICAgdXNlcklkPXtwb2xsLnVzZXJfaWR9XG4gICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17cG9sbC5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgIG9wdGlvbnM9e3BvbGwub3B0aW9uc31cbiAgICAgICAgICAgICAgICAgIHBvbGxWb3Rlcz17cG9sbC5wb2xsX3ZvdGVzfVxuICAgICAgICAgICAgICAgICAgY3VycmVudFVzZXJJZD17dXNlcklkfVxuICAgICAgICAgICAgICAgICAgb25TdWJtaXQ9eyhvcHRpb25JZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBhZGRWb3RlKHtcbiAgICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdHM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbl9pZDogb3B0aW9uSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9sbF9pZDogcG9sbElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgfVxuICAgICAgPC9kaXY+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoRGF0YSh3aXRoUm91dGVyKE1lc3NhZ2UpKVxuIl19 */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/pages/message.js */\"), __jsx(\"div\", {\n    className: \"jsx-1590883482\" + \" \" + \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, (loading || !data) && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), (error || !data) && !loading && __jsx(\"div\", {\n    className: \"jsx-1590883482\" + \" \" + \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Error, {\n    message: \"Error loading polls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), data && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, data.polls.map((poll, index) => {\n    return __jsx(PollComponent, {\n      tools: false,\n      key: index,\n      expiry: poll.expiry,\n      title: poll.title,\n      userId: poll.user_id,\n      description: poll.description,\n      options: poll.options,\n      pollVotes: poll.poll_votes,\n      currentUserId: userId,\n      onSubmit: optionId => {\n        addVote({\n          variables: {\n            objects: [{\n              option_id: optionId,\n              poll_id: pollId,\n              user_id: userId\n            }]\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    });\n  }))));\n}\n\nexport default withData(withRouter(Message));","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/pages/message.js"],"names":["React","useState","useEffect","useRouter","withRouter","Head","fetch","Button","Error","Loading","Notification","Spinner","gql","Query","withData","PollComponent","useMutation","useSubscription","adjustAppHeight","ADD_VOTE","Message","props","router","query","userId","setUserId","channelId","setChannelId","pollId","setPollId","payload","addVote","addVoteData","loading","error","data","polls","map","poll","index","expiry","title","user_id","description","options","poll_votes","optionId","variables","objects","option_id","poll_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter, withRouter } from 'next/router'\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport withData from '../config'\nimport PollComponent from '../components/poll.component'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\nimport { adjustAppHeight } from '../util'\n\nconst ADD_VOTE = gql`\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\n    insert_poll_votes(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nfunction Message(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  const { router: { query }} = props\n  const [userId, setUserId] = useState(query.userId)\n  const [channelId, setChannelId] = useState(query.channelId)\n  const [pollId, setPollId] = useState(query.payload)\n  const [addVote, addVoteData] = useMutation(ADD_VOTE)\n  const { loading, error, data } = useSubscription(gql`\n    subscription {\n      polls(where: { id: { _eq: ${pollId} } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        options\n        poll_votes {\n          user_id\n          option_id\n        }\n      }\n    }\n  `)\n\n  useEffect(() => {\n    adjustAppHeight()\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Polls</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link href=\"/static/css/styles.css\" rel=\"stylesheet\" />\n        <link href=\"/static/images/favicon.png\" rel=\"shortcut icon\" />\n      </Head>\n\n      <style global jsx>{`\n        * {\n          margin: 0px;\n          padding: 0px;\n        }\n\n        body {\n          background: white;\n          overflow: scroll;\n        }\n\n        .container {\n          background: white;\n          padding: 20px;\n        }\n\n        .error {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          width: 100%;\n        }\n      `}</style>\n\n\n      <div className=\"container\">\n        {(loading || !data) && <Spinner />}\n        {((error || !data) && !loading) && <div className=\"error\"><Error message=\"Error loading polls\" /></div>}\n        {data &&\n          <React.Fragment>\n            {data.polls.map((poll, index) => {\n              return (\n                <PollComponent\n                  tools={false}\n                  key={index}\n                  expiry={poll.expiry}\n                  title={poll.title}\n                  userId={poll.user_id}\n                  description={poll.description}\n                  options={poll.options}\n                  pollVotes={poll.poll_votes}\n                  currentUserId={userId}\n                  onSubmit={(optionId) => {\n                    addVote({\n                      variables: {\n                        objects: [\n                          {\n                            option_id: optionId,\n                            poll_id: pollId,\n                            user_id: userId,\n                          }\n                        ]\n                      }\n                    })\n                  }}\n                />\n              )\n            })}\n          </React.Fragment>\n        }\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withData(withRouter(Message))\n"]},"metadata":{},"sourceType":"module"}