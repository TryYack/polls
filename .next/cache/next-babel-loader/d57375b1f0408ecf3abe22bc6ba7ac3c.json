{"ast":null,"code":"var _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/components/poll.component.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Progress, Button } from '@weekday/elements';\nimport moment from 'moment';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { openAppModal } from '../util';\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport default function PollComponent(props) {\n  const {\n    0: complete,\n    1: setComplete\n  } = useState(false);\n  const {\n    0: total,\n    1: setTotal\n  } = useState(0);\n  const {\n    0: highest,\n    1: setHighest\n  } = useState(0);\n  const {\n    0: expired,\n    1: setExpired\n  } = useState(0);\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL);\n\n  const updatePoll = async () => {\n    openAppModal({\n      name: 'Update poll',\n      url: 'http://localhost:3000/update?pollId=' + props.id\n    });\n  };\n\n  const confirmDeletePoll = async () => {\n    if (confirm(\"Are you sure?\")) {\n      deletePoll({\n        variables: {\n          id: props.id\n        }\n      });\n    }\n  };\n\n  const voteOption = async optionId => {\n    props.onSubmit(optionId);\n    setComplete(true);\n  };\n\n  useEffect(() => {\n    let voteCountHighest = 0;\n    props.options.map(option => {\n      // See if this user has completed the poll\n      props.pollVotes.map(vote => {\n        if (vote.user_id == props.currentUserId) setComplete(true);\n      }); // Set the score for the highest amount of votes\n\n      voteCountHighest = props.pollVotes.filter(vote => vote.option_id == option.id).length;\n    });\n    setTotal(props.pollVotes.length);\n    setHighest(voteCountHighest);\n    setExpired(moment(props.expiry).isBefore(moment()));\n  }, [props]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(_JSXStyle, {\n    id: \"4211460005\",\n    __self: this\n  }, \".poll-container.jsx-4211460005{width:100%;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:20px;}.poll-inner.jsx-4211460005{-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.progress-container.jsx-4211460005{margin-bottom:5px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvY29tcG9uZW50cy9wb2xsLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RGtCLEFBR3NCLEFBV0osQUFTVyxXQW5CQyxPQW9CUixXQUNiLElBVndCLGdEQVZULDhCQVdBLDRDQVZTLDhCQVdILGdEQVZDLDZDQVdDLG9EQVZBLHdCQVdFLG9EQVZBLCtDQVd6QixvREFWcUIsbUJBQ3JCIiwiZmlsZSI6Ii9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvY29tcG9uZW50cy9wb2xsLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBQcm9ncmVzcywgQnV0dG9uIH0gZnJvbSAnQHdlZWtkYXkvZWxlbWVudHMnXG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCdcbmltcG9ydCB7IHVzZU11dGF0aW9uLCB1c2VTdWJzY3JpcHRpb24gfSBmcm9tICdAYXBvbGxvL3JlYWN0LWhvb2tzJ1xuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCB7IG9wZW5BcHBNb2RhbCB9IGZyb20gJy4uL3V0aWwnXG5cbmNvbnN0IERFTEVURV9QT0xMID0gZ3FsYFxuICBtdXRhdGlvbiBkZWxldGVfcG9sbHMoJGlkOiBJbnQpIHtcbiAgICBkZWxldGVfcG9sbHMoXG4gICAgICB3aGVyZToge2lkOiB7X2VxOiAkaWR9fVxuICAgICkge1xuICAgICAgYWZmZWN0ZWRfcm93c1xuICAgIH1cbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9sbENvbXBvbmVudChwcm9wcykge1xuICBjb25zdCBbY29tcGxldGUsIHNldENvbXBsZXRlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbdG90YWwsIHNldFRvdGFsXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFtoaWdoZXN0LCBzZXRIaWdoZXN0XSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFtleHBpcmVkLCBzZXRFeHBpcmVkXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFtkZWxldGVQb2xsLCBkZWxldGVEYXRhXSA9IHVzZU11dGF0aW9uKERFTEVURV9QT0xMKVxuXG4gIGNvbnN0IHVwZGF0ZVBvbGwgPSBhc3luYyAoKSA9PiB7XG4gICAgb3BlbkFwcE1vZGFsKHtcbiAgICAgIG5hbWU6ICdVcGRhdGUgcG9sbCcsXG4gICAgICB1cmw6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvdXBkYXRlP3BvbGxJZD0nICsgcHJvcHMuaWQsXG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IGNvbmZpcm1EZWxldGVQb2xsID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmIChjb25maXJtKFwiQXJlIHlvdSBzdXJlP1wiKSkge1xuICAgICAgZGVsZXRlUG9sbCh7IHZhcmlhYmxlczogeyBpZDogcHJvcHMuaWQgfSB9KVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHZvdGVPcHRpb24gPSBhc3luYyAob3B0aW9uSWQpID0+IHtcbiAgICBwcm9wcy5vblN1Ym1pdChvcHRpb25JZClcbiAgICBzZXRDb21wbGV0ZSh0cnVlKVxuICB9XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBsZXQgdm90ZUNvdW50SGlnaGVzdCA9IDBcblxuICAgIHByb3BzLm9wdGlvbnMubWFwKG9wdGlvbiA9PiB7XG4gICAgICAvLyBTZWUgaWYgdGhpcyB1c2VyIGhhcyBjb21wbGV0ZWQgdGhlIHBvbGxcbiAgICAgIHByb3BzLnBvbGxWb3Rlcy5tYXAodm90ZSA9PiB7XG4gICAgICAgIGlmICh2b3RlLnVzZXJfaWQgPT0gcHJvcHMuY3VycmVudFVzZXJJZCkgc2V0Q29tcGxldGUodHJ1ZSlcbiAgICAgIH0pXG5cbiAgICAgIC8vIFNldCB0aGUgc2NvcmUgZm9yIHRoZSBoaWdoZXN0IGFtb3VudCBvZiB2b3Rlc1xuICAgICAgdm90ZUNvdW50SGlnaGVzdCA9IHByb3BzLnBvbGxWb3Rlcy5maWx0ZXIodm90ZSA9PiB2b3RlLm9wdGlvbl9pZCA9PSBvcHRpb24uaWQpLmxlbmd0aFxuICAgIH0pXG5cbiAgICBzZXRUb3RhbChwcm9wcy5wb2xsVm90ZXMubGVuZ3RoKVxuICAgIHNldEhpZ2hlc3Qodm90ZUNvdW50SGlnaGVzdClcbiAgICBzZXRFeHBpcmVkKG1vbWVudChwcm9wcy5leHBpcnkpLmlzQmVmb3JlKG1vbWVudCgpKSlcbiAgfSwgW3Byb3BzXSlcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnBvbGwtY29udGFpbmVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICAgICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb2xsLWlubmVyIHtcbiAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wcm9ncmVzcy1jb250YWluZXIge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvbGwtY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9sbC1pbm5lclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaDQgY29sb3ItZDMgdGV4dC1sZWZ0IHctMTAwIG1iLTBcIj57cHJvcHMudGl0bGV9PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoNSBjb2xvci1kMCB0ZXh0LWxlZnQgdy0xMDAgbWItMTBcIj57cHJvcHMuZGVzY3JpcHRpb259PC9kaXY+XG5cbiAgICAgICAgICB7KCFjb21wbGV0ZSAmJiAhZXhwaXJlZCkgJiZcbiAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAge3Byb3BzLm9wdGlvbnMubWFwKChvcHRpb24sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvZ3Jlc3MtY29udGFpbmVyXCIga2V5PXtpbmRleH0+XG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXtvcHRpb24udGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICB0aGVtZT1cImJsdWUtYm9yZGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICBzaXplPVwiZnVsbC13aWR0aFwiXG4gICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgaGVpZ2h0OiAzNSB9fVxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHZvdGVPcHRpb24ob3B0aW9uLmlkKX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgIH1cblxuICAgICAgICAgIHsoY29tcGxldGUgfHwgZXhwaXJlZCkgJiZcbiAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAge3Byb3BzLm9wdGlvbnMubWFwKChvcHRpb24sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcG9sbF92b3RlcyA9IHByb3BzLnBvbGxWb3Rlcy5maWx0ZXIodm90ZSA9PiB2b3RlLm9wdGlvbl9pZCA9PSBvcHRpb24uaWQpXG4gICAgICAgICAgICAgICAgY29uc3QgcGVyY2VudGFnZSA9IHBvbGxfdm90ZXMubGVuZ3RoID09IDAgPyAwIDogTWF0aC5mbG9vcigocG9sbF92b3Rlcy5sZW5ndGggLyB0b3RhbCkgKiAxMDApXG4gICAgICAgICAgICAgICAgY29uc3QgY29sb3IgPSBwb2xsX3ZvdGVzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJyNmMGYyZjUnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogcG9sbF92b3Rlcy5sZW5ndGggPj0gaGlnaGVzdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJyNlOWVkZjInXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnI2YwZjJmNSdcblxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzLWNvbnRhaW5lclwiIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICA8UHJvZ3Jlc3NcbiAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlPXtwZXJjZW50YWdlfVxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPXtjb2xvcn1cbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXtvcHRpb24udGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbHM9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAgY29sb3ItZDEgdGV4dC1sZWZ0IHctMTAwIG10LTVcIj5cbiAgICAgICAgICAgIHsoZXhwaXJlZCAmJiBwcm9wcy5leHBpcnkpICYmXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm1yLTEwXCI+VGhpcyBwb2xsIGV4cGlyZWQge21vbWVudChwcm9wcy5leHBpcnkpLmZyb21Ob3coKX08L3NwYW4+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7KCFleHBpcmVkICYmIHByb3BzLmV4cGlyeSkgJiZcbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibXItMTBcIj5UaGlzIHBvbGwgZXhwaXJlcyBvbiB7bW9tZW50KHByb3BzLmV4cGlyeSkuZm9ybWF0KCdMTCcpfTwvc3Bhbj5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHsoIWV4cGlyZWQgJiYgIXByb3BzLmV4cGlyeSkgJiZcbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibXItMTBcIj5UaGlzIHBvbGwgZG9lcyBub3QgZXhwaXJlPC9zcGFuPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeyhwcm9wcy5jdXJyZW50VXNlcklkID09IHByb3BzLnVzZXJJZCAmJiBwcm9wcy50b29scykgJiZcbiAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzc05hbWU9XCJidXR0b24gbXItMTAgY29sb3ItYmx1ZVwiIG9uQ2xpY2s9e3VwZGF0ZVBvbGx9PlVwZGF0ZTwvc3Ryb25nPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeyhwcm9wcy5jdXJyZW50VXNlcklkID09IHByb3BzLnVzZXJJZCAmJiBwcm9wcy50b29scykgJiZcbiAgICAgICAgICAgICAgPHN0cm9uZyBjbGFzc05hbWU9XCJidXR0b24gY29sb3ItcmVkXCIgb25DbGljaz17Y29uZmlybURlbGV0ZVBvbGx9PkRlbGV0ZTwvc3Ryb25nPlxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gIClcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/components/poll.component.js */\"), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"poll-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"poll-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"h4 color-d3 text-left w-100 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"h5 color-d0 text-left w-100 mb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, props.description), !complete && !expired && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.options.map((option, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-4211460005\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(Button, {\n      text: option.text,\n      theme: \"blue-border\",\n      size: \"full-width\",\n      style: {\n        height: 35\n      },\n      onClick: () => voteOption(option.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  })), (complete || expired) && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.options.map((option, index) => {\n    const poll_votes = props.pollVotes.filter(vote => vote.option_id == option.id);\n    const percentage = poll_votes.length == 0 ? 0 : Math.floor(poll_votes.length / total * 100);\n    const color = poll_votes ? '#f0f2f5' : poll_votes.length >= highest ? '#e9edf2' : '#f0f2f5';\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-4211460005\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(Progress, {\n      percentage: percentage,\n      color: color,\n      text: option.text,\n      labels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, expired && props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"This poll expired \", moment(props.expiry).fromNow()), !expired && props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"This poll expires on \", moment(props.expiry).format('LL')), !expired && !props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"This poll does not expire\"), props.currentUserId == props.userId && props.tools && __jsx(\"strong\", {\n    onClick: updatePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button mr-10 color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Update\"), props.currentUserId == props.userId && props.tools && __jsx(\"strong\", {\n    onClick: confirmDeletePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button color-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/components/poll.component.js"],"names":["React","useState","useEffect","Progress","Button","moment","useMutation","useSubscription","gql","openAppModal","DELETE_POLL","PollComponent","props","complete","setComplete","total","setTotal","highest","setHighest","expired","setExpired","deletePoll","deleteData","updatePoll","name","url","id","confirmDeletePoll","confirm","variables","voteOption","optionId","onSubmit","voteCountHighest","options","map","option","pollVotes","vote","user_id","currentUserId","filter","option_id","length","expiry","isBefore","title","description","index","text","height","poll_votes","percentage","Math","floor","color","fromNow","format","userId","tools"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Progress, Button } from '@weekday/elements'\nimport moment from 'moment'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { openAppModal } from '../util'\n\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport default function PollComponent(props) {\n  const [complete, setComplete] = useState(false)\n  const [total, setTotal] = useState(0)\n  const [highest, setHighest] = useState(0)\n  const [expired, setExpired] = useState(0)\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL)\n\n  const updatePoll = async () => {\n    openAppModal({\n      name: 'Update poll',\n      url: 'http://localhost:3000/update?pollId=' + props.id,\n    })\n  }\n\n  const confirmDeletePoll = async () => {\n    if (confirm(\"Are you sure?\")) {\n      deletePoll({ variables: { id: props.id } })\n    }\n  }\n\n  const voteOption = async (optionId) => {\n    props.onSubmit(optionId)\n    setComplete(true)\n  }\n\n  useEffect(() => {\n    let voteCountHighest = 0\n\n    props.options.map(option => {\n      // See if this user has completed the poll\n      props.pollVotes.map(vote => {\n        if (vote.user_id == props.currentUserId) setComplete(true)\n      })\n\n      // Set the score for the highest amount of votes\n      voteCountHighest = props.pollVotes.filter(vote => vote.option_id == option.id).length\n    })\n\n    setTotal(props.pollVotes.length)\n    setHighest(voteCountHighest)\n    setExpired(moment(props.expiry).isBefore(moment()))\n  }, [props])\n\n  return (\n    <React.Fragment>\n      <style jsx>{`\n        .poll-container {\n          width: 100%;\n          height: fit-content;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n          margin-bottom: 20px;\n        }\n\n        .poll-inner {\n          flex: 1;\n          flex-direction: column;\n          display: flex;\n          align-items: center;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .progress-container {\n          margin-bottom: 5px;\n          width: 100%;\n        }\n      `}</style>\n\n      <div className=\"poll-container\">\n        <div className=\"poll-inner\">\n          <div className=\"h4 color-d3 text-left w-100 mb-0\">{props.title}</div>\n          <div className=\"h5 color-d0 text-left w-100 mb-10\">{props.description}</div>\n\n          {(!complete && !expired) &&\n            <React.Fragment>\n              {props.options.map((option, index) => {\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Button\n                      text={option.text}\n                      theme=\"blue-border\"\n                      size=\"full-width\"\n                      style={{ height: 35 }}\n                      onClick={() => voteOption(option.id)}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          {(complete || expired) &&\n            <React.Fragment>\n              {props.options.map((option, index) => {\n                const poll_votes = props.pollVotes.filter(vote => vote.option_id == option.id)\n                const percentage = poll_votes.length == 0 ? 0 : Math.floor((poll_votes.length / total) * 100)\n                const color = poll_votes\n                                ? '#f0f2f5'\n                                : poll_votes.length >= highest\n                                  ? '#e9edf2'\n                                  : '#f0f2f5'\n\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Progress\n                      percentage={percentage}\n                      color={color}\n                      text={option.text}\n                      labels={true}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"p color-d1 text-left w-100 mt-5\">\n            {(expired && props.expiry) &&\n              <span className=\"mr-10\">This poll expired {moment(props.expiry).fromNow()}</span>\n            }\n            {(!expired && props.expiry) &&\n              <span className=\"mr-10\">This poll expires on {moment(props.expiry).format('LL')}</span>\n            }\n            {(!expired && !props.expiry) &&\n              <span className=\"mr-10\">This poll does not expire</span>\n            }\n            {(props.currentUserId == props.userId && props.tools) &&\n              <strong className=\"button mr-10 color-blue\" onClick={updatePoll}>Update</strong>\n            }\n            {(props.currentUserId == props.userId && props.tools) &&\n              <strong className=\"button color-red\" onClick={confirmDeletePoll}>Delete</strong>\n            }\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}