{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/pages/message.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    subscription {\\n      polls(where: { id: { _eq: \", \" } }) {\\n        id\\n        title\\n        description\\n        user_id\\n        channel_id\\n        expiry\\n        options\\n        poll_votes {\\n          user_id\\n          option_id\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\\n    insert_poll_votes(objects: $objects) {\\n      returning {\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, withRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport withData from '../config';\nimport PollComponent from '../components/poll.component';\nvar ADD_VOTE = gql(_templateObject());\n\nfunction Message(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  var query = props.router.query;\n\n  var _useState = useState(query.userId),\n      userId = _useState[0],\n      setUserId = _useState[1];\n\n  var _useState2 = useState(query.channelId),\n      channelId = _useState2[0],\n      setChannelId = _useState2[1];\n\n  var _useState3 = useState(query.pollId),\n      pollId = _useState3[0],\n      setPollId = _useState3[1];\n\n  var _useMutation = useMutation(ADD_VOTE),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addVote = _useMutation2[0],\n      addVoteData = _useMutation2[1];\n\n  var _useSubscription = useSubscription(gql(_templateObject2(), pollId)),\n      loading = _useSubscription.loading,\n      error = _useSubscription.error,\n      data = _useSubscription.data;\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Polls\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/css/styles.css\",\n    rel: \"stylesheet\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/images/favicon.png\",\n    rel: \"shortcut icon\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1390389061\",\n    __self: this\n  }, \"*{margin:0px;padding:0px;}body{background:white;}.container{background:white;width:100%;height:100%;position:absolute;left:0px;top:0px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.error{position:absolute;top:0px;left:0px;width:100%;}.polls-listing-container{-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;padding:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvcGFnZXMvbWVzc2FnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRHlCLEFBR3NCLEFBS00sQUFJQSxBQWFDLEFBT1gsV0E1QkssTUFLZCxBQUlhLENBYUgsS0FyQlYsR0FzQlcsRUFiRyxLQW1CQyxFQUxGLEtBYk8sTUFjcEIsWUFiVyxTQUNELFFBQ0ssZ0NBZ0JTLDBDQWZGLG9DQWdCRCw2REFmRSxnQ0FnQkEsNENBZkUsZ0NBZ0JJLG1FQWY3QixzQ0FnQmUsYUFDZiIsImZpbGUiOiIvVXNlcnMvam9kdXBsZXNzaXMvV29yay9XZWVrZGF5L3BvbGxzL3BhZ2VzL21lc3NhZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlUm91dGVyLCB3aXRoUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnXG5pbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJ1xuaW1wb3J0IHsgQnV0dG9uLCBFcnJvciwgTG9hZGluZywgTm90aWZpY2F0aW9uLCBTcGlubmVyIH0gZnJvbSAnQHdlZWtkYXkvZWxlbWVudHMnXG5pbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJ1xuaW1wb3J0IHsgUXVlcnkgfSBmcm9tICdyZWFjdC1hcG9sbG8nXG5pbXBvcnQgd2l0aERhdGEgZnJvbSAnLi4vY29uZmlnJ1xuaW1wb3J0IFBvbGxDb21wb25lbnQgZnJvbSAnLi4vY29tcG9uZW50cy9wb2xsLmNvbXBvbmVudCdcblxuY29uc3QgQUREX1ZPVEUgPSBncWxgXG4gIG11dGF0aW9uIGFkZF92b3RlKCRvYmplY3RzOiBbcG9sbF92b3Rlc19pbnNlcnRfaW5wdXQhXSEpIHtcbiAgICBpbnNlcnRfcG9sbF92b3RlcyhvYmplY3RzOiAkb2JqZWN0cykge1xuICAgICAgcmV0dXJuaW5nIHtcbiAgICAgICAgaWRcbiAgICAgIH1cbiAgICB9XG4gIH1cbmA7XG5cbmZ1bmN0aW9uIE1lc3NhZ2UocHJvcHMpIHtcbiAgLy8gP3VzZXJJZD01ZGI3ZTNjOTg0NzYyNDIxNTRkNDMxODEmY2hhbm5lbElkPTVkYjg3ZjA0ZGIwNTlhNmQ4ZGM4ZDA2OFxuICBjb25zdCB7IHJvdXRlcjogeyBxdWVyeSB9fSA9IHByb3BzXG4gIGNvbnN0IFt1c2VySWQsIHNldFVzZXJJZF0gPSB1c2VTdGF0ZShxdWVyeS51c2VySWQpXG4gIGNvbnN0IFtjaGFubmVsSWQsIHNldENoYW5uZWxJZF0gPSB1c2VTdGF0ZShxdWVyeS5jaGFubmVsSWQpXG4gIGNvbnN0IFtwb2xsSWQsIHNldFBvbGxJZF0gPSB1c2VTdGF0ZShxdWVyeS5wb2xsSWQpXG4gIGNvbnN0IFthZGRWb3RlLCBhZGRWb3RlRGF0YV0gPSB1c2VNdXRhdGlvbihBRERfVk9URSlcbiAgY29uc3QgeyBsb2FkaW5nLCBlcnJvciwgZGF0YSB9ID0gdXNlU3Vic2NyaXB0aW9uKGdxbGBcbiAgICBzdWJzY3JpcHRpb24ge1xuICAgICAgcG9sbHMod2hlcmU6IHsgaWQ6IHsgX2VxOiAke3BvbGxJZH0gfSB9KSB7XG4gICAgICAgIGlkXG4gICAgICAgIHRpdGxlXG4gICAgICAgIGRlc2NyaXB0aW9uXG4gICAgICAgIHVzZXJfaWRcbiAgICAgICAgY2hhbm5lbF9pZFxuICAgICAgICBleHBpcnlcbiAgICAgICAgb3B0aW9uc1xuICAgICAgICBwb2xsX3ZvdGVzIHtcbiAgICAgICAgICB1c2VyX2lkXG4gICAgICAgICAgb3B0aW9uX2lkXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIGApXG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPlBvbGxzPC90aXRsZT5cbiAgICAgICAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cImluaXRpYWwtc2NhbGU9MS4wLCB3aWR0aD1kZXZpY2Utd2lkdGhcIiAvPlxuICAgICAgICA8bGluayBocmVmPVwiL3N0YXRpYy9jc3Mvc3R5bGVzLmNzc1wiIHJlbD1cInN0eWxlc2hlZXRcIiAvPlxuICAgICAgICA8bGluayBocmVmPVwiL3N0YXRpYy9pbWFnZXMvZmF2aWNvbi5wbmdcIiByZWw9XCJzaG9ydGN1dCBpY29uXCIgLz5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgPHN0eWxlIGdsb2JhbCBqc3g+e2BcbiAgICAgICAgKiB7XG4gICAgICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgYm9keSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgIH1cblxuICAgICAgICAuY29udGFpbmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIGxlZnQ6IDBweDtcbiAgICAgICAgICB0b3A6IDBweDtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5lcnJvciB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHRvcDogMHB4O1xuICAgICAgICAgIGxlZnQ6IDBweDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb2xscy1saXN0aW5nLWNvbnRhaW5lciB7XG4gICAgICAgICAgZmxleDogMTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cblxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBjb2x1bW5cIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb2xscy1saXN0aW5nLWNvbnRhaW5lclwiID5cbiAgICAgICAgICB7KGxvYWRpbmcgfHwgIWRhdGEpICYmIDxTcGlubmVyIC8+fVxuICAgICAgICAgIHsoZXJyb3IgfHwgIWRhdGEpICYmIDxkaXYgY2xhc3NOYW1lPVwiZXJyb3JcIj48RXJyb3IgbWVzc2FnZT1cIkVycm9yIGxvYWRpbmcgcG9sbHNcIiAvPjwvZGl2Pn1cbiAgICAgICAgICB7ZGF0YSAmJlxuICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICB7ZGF0YS5wb2xscy5tYXAoKHBvbGwsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgIDxQb2xsQ29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICAgICAgICAgIGV4cGlyeT17cG9sbC5leHBpcnl9XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPXtwb2xsLnRpdGxlfVxuICAgICAgICAgICAgICAgICAgICB1c2VySWQ9e3BvbGwudXNlcl9pZH1cbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3BvbGwuZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM9e3BvbGwub3B0aW9uc31cbiAgICAgICAgICAgICAgICAgICAgcG9sbFZvdGVzPXtwb2xsLnBvbGxfdm90ZXN9XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRVc2VySWQ9e3VzZXJJZH1cbiAgICAgICAgICAgICAgICAgICAgb25TdWJtaXQ9eyhvcHRpb25JZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGFkZFZvdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdHM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25faWQ6IG9wdGlvbklkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9sbF9pZDogcG9sbElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgIH1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aERhdGEod2l0aFJvdXRlcihNZXNzYWdlKSlcbiJdfQ== */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/pages/message.js */\"), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"container column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"polls-listing-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, (loading || !data) && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), (error || !data) && __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Error, {\n    message: \"Error loading polls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), data && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, data.polls.map(function (poll, index) {\n    return __jsx(PollComponent, {\n      key: index,\n      expiry: poll.expiry,\n      title: poll.title,\n      userId: poll.user_id,\n      description: poll.description,\n      options: poll.options,\n      pollVotes: poll.poll_votes,\n      currentUserId: userId,\n      onSubmit: function onSubmit(optionId) {\n        addVote({\n          variables: {\n            objects: [{\n              option_id: optionId,\n              poll_id: pollId,\n              user_id: userId\n            }]\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    });\n  })))));\n}\n\nexport default withData(withRouter(Message));","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/pages/message.js"],"names":["React","useState","useEffect","useRouter","withRouter","Head","fetch","Button","Error","Loading","Notification","Spinner","gql","Query","withData","PollComponent","ADD_VOTE","Message","props","query","router","userId","setUserId","channelId","setChannelId","pollId","setPollId","useMutation","addVote","addVoteData","useSubscription","loading","error","data","polls","map","poll","index","expiry","title","user_id","description","options","poll_votes","optionId","variables","objects","option_id","poll_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter, withRouter } from 'next/router'\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport withData from '../config'\nimport PollComponent from '../components/poll.component'\n\nconst ADD_VOTE = gql`\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\n    insert_poll_votes(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nfunction Message(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  const { router: { query }} = props\n  const [userId, setUserId] = useState(query.userId)\n  const [channelId, setChannelId] = useState(query.channelId)\n  const [pollId, setPollId] = useState(query.pollId)\n  const [addVote, addVoteData] = useMutation(ADD_VOTE)\n  const { loading, error, data } = useSubscription(gql`\n    subscription {\n      polls(where: { id: { _eq: ${pollId} } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        options\n        poll_votes {\n          user_id\n          option_id\n        }\n      }\n    }\n  `)\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Polls</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link href=\"/static/css/styles.css\" rel=\"stylesheet\" />\n        <link href=\"/static/images/favicon.png\" rel=\"shortcut icon\" />\n      </Head>\n\n      <style global jsx>{`\n        * {\n          margin: 0px;\n          padding: 0px;\n        }\n\n        body {\n          background: white;\n        }\n\n        .container {\n          background: white;\n          width: 100%;\n          height: 100%;\n          position: absolute;\n          left: 0px;\n          top: 0px;\n          display: flex;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .error {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          width: 100%;\n        }\n\n        .polls-listing-container {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          align-content: center;\n          justify-content: flex-start;\n          padding: 20px;\n        }\n      `}</style>\n\n\n      <div className=\"container column\">\n        <div className=\"polls-listing-container\" >\n          {(loading || !data) && <Spinner />}\n          {(error || !data) && <div className=\"error\"><Error message=\"Error loading polls\" /></div>}\n          {data &&\n            <React.Fragment>\n              {data.polls.map((poll, index) => {\n                return (\n                  <PollComponent\n                    key={index}\n                    expiry={poll.expiry}\n                    title={poll.title}\n                    userId={poll.user_id}\n                    description={poll.description}\n                    options={poll.options}\n                    pollVotes={poll.poll_votes}\n                    currentUserId={userId}\n                    onSubmit={(optionId) => {\n                      addVote({\n                        variables: {\n                          objects: [\n                            {\n                              option_id: optionId,\n                              poll_id: pollId,\n                              user_id: userId,\n                            }\n                          ]\n                        }\n                      })\n                    }}\n                  />\n                )\n              })}\n            </React.Fragment>\n          }\n        </div>\n      </div>\n\n    </React.Fragment>\n  )\n}\n\nexport default withData(withRouter(Message))\n"]},"metadata":{},"sourceType":"module"}