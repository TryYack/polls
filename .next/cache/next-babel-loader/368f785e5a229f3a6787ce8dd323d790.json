{"ast":null,"code":"var _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/components/poll.component.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Progress, Button } from '@weekday/elements';\nexport default function PollComponent(props) {\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useState2 = useState(0),\n      total = _useState2[0],\n      setTotal = _useState2[1];\n\n  var _useState3 = useState(0),\n      highest = _useState3[0],\n      setHighest = _useState3[1];\n\n  useEffect(function () {\n    var answerCount = 0;\n    var answerCountHighest = 0;\n    props.questions.map(function (question) {\n      // See if this user has completed the poll\n      question.answers.map(function (answer) {\n        if (answer.user_id == props.currentUserId) setComplete(true);\n      }); // Set the score for the highest amount of votes\n\n      if (question.answers.length > answerCountHighest) answerCountHighest = question.answers.length; // Incremenet the total amount of answers/voted\n\n      answerCount += question.answers.length;\n    });\n    setTotal(answerCount);\n    setHighest(answerCountHighest);\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(_JSXStyle, {\n    id: \"389275926\",\n    __self: this\n  }, \".poll-container.jsx-389275926{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.poll-inner.jsx-389275926{-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.progress-container.jsx-389275926{margin-bottom:5px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvY29tcG9uZW50cy9wb2xsLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErQmtCLEFBR3NCLEFBU0osQUFTVyxXQWpCTCxPQWtCRixXQUNiLElBVndCLG9EQVJBLDBCQVNULG9EQVJPLHNCQVNELDJFQVJFLGtCQVNBLDBEQVJFLGtCQVNBLGlGQVJ6QixrQkFTQSIsImZpbGUiOiIvVXNlcnMvam9kdXBsZXNzaXMvV29yay9XZWVrZGF5L3BvbGxzL2NvbXBvbmVudHMvcG9sbC5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgUHJvZ3Jlc3MsIEJ1dHRvbiB9IGZyb20gJ0B3ZWVrZGF5L2VsZW1lbnRzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQb2xsQ29tcG9uZW50KHByb3BzKSB7XG4gIGNvbnN0IFtjb21wbGV0ZSwgc2V0Q29tcGxldGVdID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFt0b3RhbCwgc2V0VG90YWxdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW2hpZ2hlc3QsIHNldEhpZ2hlc3RdID0gdXNlU3RhdGUoMClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBhbnN3ZXJDb3VudCA9IDBcbiAgICBsZXQgYW5zd2VyQ291bnRIaWdoZXN0ID0gMFxuXG4gICAgcHJvcHMucXVlc3Rpb25zLm1hcChxdWVzdGlvbiA9PiB7XG4gICAgICAvLyBTZWUgaWYgdGhpcyB1c2VyIGhhcyBjb21wbGV0ZWQgdGhlIHBvbGxcbiAgICAgIHF1ZXN0aW9uLmFuc3dlcnMubWFwKGFuc3dlciA9PiB7XG4gICAgICAgIGlmIChhbnN3ZXIudXNlcl9pZCA9PSBwcm9wcy5jdXJyZW50VXNlcklkKSBzZXRDb21wbGV0ZSh0cnVlKVxuICAgICAgfSlcblxuICAgICAgLy8gU2V0IHRoZSBzY29yZSBmb3IgdGhlIGhpZ2hlc3QgYW1vdW50IG9mIHZvdGVzXG4gICAgICBpZiAocXVlc3Rpb24uYW5zd2Vycy5sZW5ndGggPiBhbnN3ZXJDb3VudEhpZ2hlc3QpIGFuc3dlckNvdW50SGlnaGVzdCA9IHF1ZXN0aW9uLmFuc3dlcnMubGVuZ3RoXG5cbiAgICAgIC8vIEluY3JlbWVuZXQgdGhlIHRvdGFsIGFtb3VudCBvZiBhbnN3ZXJzL3ZvdGVkXG4gICAgICBhbnN3ZXJDb3VudCArPSBxdWVzdGlvbi5hbnN3ZXJzLmxlbmd0aFxuICAgIH0pXG5cbiAgICBzZXRUb3RhbChhbnN3ZXJDb3VudClcbiAgICBzZXRIaWdoZXN0KGFuc3dlckNvdW50SGlnaGVzdClcbiAgfSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5wb2xsLWNvbnRhaW5lciB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb2xsLWlubmVyIHtcbiAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wcm9ncmVzcy1jb250YWluZXIge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvbGwtY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9sbC1pbm5lclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaDUgY29sb3ItZDMgdGV4dC1sZWZ0IHctMTAwIG1iLTEwXCI+e3Byb3BzLnRpdGxlfTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicCBjb2xvci1kMCB0ZXh0LWxlZnQgdy0xMDAgbWItMTBcIj57cHJvcHMuZGVzY3JpcHRpb259PC9kaXY+XG5cbiAgICAgICAgICB7IWNvbXBsZXRlICYmXG4gICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgIHtwcm9wcy5xdWVzdGlvbnMubWFwKChxdWVzdGlvbiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9ncmVzcy1jb250YWluZXJcIiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e3F1ZXN0aW9uLnF1ZXN0aW9ufVxuICAgICAgICAgICAgICAgICAgICAgIHRoZW1lPVwiYmx1ZS1ib3JkZXJcIlxuICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJmdWxsLXdpZHRoXCJcbiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17eyBoZWlnaHQ6IDM1IH19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB7Y29tcGxldGUgJiZcbiAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAge3Byb3BzLnF1ZXN0aW9ucy5tYXAoKHF1ZXN0aW9uLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBlcmNlbnRhZ2UgPSBNYXRoLmZsb29yKChxdWVzdGlvbi5hbnN3ZXJzLmxlbmd0aCAvIHRvdGFsKSAqIDEwMClcbiAgICAgICAgICAgICAgICBjb25zdCBjb2xvciA9IHF1ZXN0aW9uLmFuc3dlcnMubGVuZ3RoID49IGhpZ2hlc3QgPyAnI2U5ZWRmMicgOiAnI0Y4RjlGQSdcblxuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2dyZXNzLWNvbnRhaW5lclwiIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICA8UHJvZ3Jlc3NcbiAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlPXtwZXJjZW50YWdlfVxuICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPXtjb2xvcn1cbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXtxdWVzdGlvbi5xdWVzdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbHM9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICB9XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAgY29sb3ItZDEgdGV4dC1sZWZ0IHctMTAwIG10LTVcIj5cbiAgICAgICAgICAgIDxzcGFuPlRoaXMgcG9sbCBleHBpcmVzIGluIDUgZGF5czwvc3Bhbj5cbiAgICAgICAgICAgIHtwcm9wcy5jdXJyZW50VXNlcklkID09IHByb3BzLnVzZXJJZCAmJlxuICAgICAgICAgICAgICA8c3Ryb25nIGNsYXNzTmFtZT1cImJ1dHRvbiBtbC0xMCBjb2xvci1ibHVlXCI+RWRpdCBwb2xsPC9zdHJvbmc+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKVxufVxuIl19 */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/components/poll.component.js */\"), __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"poll-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"poll-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"h5 color-d3 text-left w-100 mb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"p color-d0 text-left w-100 mb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.description), !complete && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.questions.map(function (question, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-389275926\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(Button, {\n      text: question.question,\n      theme: \"blue-border\",\n      size: \"full-width\",\n      style: {\n        height: 35\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  })), complete && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.questions.map(function (question, index) {\n    var percentage = Math.floor(question.answers.length / total * 100);\n    var color = question.answers.length >= highest ? '#e9edf2' : '#F8F9FA';\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-389275926\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(Progress, {\n      percentage: percentage,\n      color: color,\n      text: question.question,\n      labels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    className: \"jsx-389275926\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"jsx-389275926\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"This poll expires in 5 days\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    className: \"jsx-389275926\" + \" \" + \"button ml-10 color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Edit poll\")))));\n}","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/components/poll.component.js"],"names":["React","useState","useEffect","Progress","Button","PollComponent","props","complete","setComplete","total","setTotal","highest","setHighest","answerCount","answerCountHighest","questions","map","question","answers","answer","user_id","currentUserId","length","title","description","index","height","percentage","Math","floor","color","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Progress, Button } from '@weekday/elements'\n\nexport default function PollComponent(props) {\n  const [complete, setComplete] = useState(false)\n  const [total, setTotal] = useState(0)\n  const [highest, setHighest] = useState(0)\n\n  useEffect(() => {\n    let answerCount = 0\n    let answerCountHighest = 0\n\n    props.questions.map(question => {\n      // See if this user has completed the poll\n      question.answers.map(answer => {\n        if (answer.user_id == props.currentUserId) setComplete(true)\n      })\n\n      // Set the score for the highest amount of votes\n      if (question.answers.length > answerCountHighest) answerCountHighest = question.answers.length\n\n      // Incremenet the total amount of answers/voted\n      answerCount += question.answers.length\n    })\n\n    setTotal(answerCount)\n    setHighest(answerCountHighest)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <style jsx>{`\n        .poll-container {\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .poll-inner {\n          flex: 1;\n          flex-direction: column;\n          display: flex;\n          align-items: center;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .progress-container {\n          margin-bottom: 5px;\n          width: 100%;\n        }\n      `}</style>\n\n      <div className=\"poll-container\">\n        <div className=\"poll-inner\">\n          <div className=\"h5 color-d3 text-left w-100 mb-10\">{props.title}</div>\n          <div className=\"p color-d0 text-left w-100 mb-10\">{props.description}</div>\n\n          {!complete &&\n            <React.Fragment>\n              {props.questions.map((question, index) => {\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Button\n                      text={question.question}\n                      theme=\"blue-border\"\n                      size=\"full-width\"\n                      style={{ height: 35 }}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          {complete &&\n            <React.Fragment>\n              {props.questions.map((question, index) => {\n                const percentage = Math.floor((question.answers.length / total) * 100)\n                const color = question.answers.length >= highest ? '#e9edf2' : '#F8F9FA'\n\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Progress\n                      percentage={percentage}\n                      color={color}\n                      text={question.question}\n                      labels={true}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"p color-d1 text-left w-100 mt-5\">\n            <span>This poll expires in 5 days</span>\n            {props.currentUserId == props.userId &&\n              <strong className=\"button ml-10 color-blue\">Edit poll</strong>\n            }\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}