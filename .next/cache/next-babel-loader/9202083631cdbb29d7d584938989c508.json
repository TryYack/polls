{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/components/poll.component.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation delete_polls($id: Int) {\\n    delete_polls(\\n      where: {id: {_eq: $id}}\\n    ) {\\n      affected_rows\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { Progress, Button } from '@weekday/elements';\nimport moment from 'moment';\nimport fetch from 'isomorphic-unfetch';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { openAppModal } from '../util';\nvar DELETE_POLL = gql(_templateObject());\nexport default function PollComponent(props) {\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useState2 = useState(0),\n      total = _useState2[0],\n      setTotal = _useState2[1];\n\n  var _useState3 = useState(0),\n      highest = _useState3[0],\n      setHighest = _useState3[1];\n\n  var _useState4 = useState(0),\n      expired = _useState4[0],\n      setExpired = _useState4[1];\n\n  var _useState5 = useState(null),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var _useMutation = useMutation(DELETE_POLL),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deletePoll = _useMutation2[0],\n      deleteData = _useMutation2[1];\n\n  var sharePoll =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:8181/v1/webhook', {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'no-cache',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': 'token 31473fc6-fee7-11e9-8f0b-362b9e155667'\n                },\n                redirect: 'follow',\n                referrer: 'no-referrer',\n                body: _JSON$stringify({\n                  message: 'Yo yo yo',\n                  attachments: [],\n                  channelId: props.channelId,\n                  payload: props.id\n                })\n              });\n\n            case 3:\n              result = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              setError('Could not share poll');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function sharePoll() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updatePoll =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              openAppModal({\n                name: 'Update poll',\n                url: 'http://localhost:3000/update?pollId=' + props.id\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updatePoll() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var confirmDeletePoll =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (confirm(\"Are you sure?\")) {\n                deletePoll({\n                  variables: {\n                    id: props.id\n                  }\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function confirmDeletePoll() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var voteOption =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(optionId) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              props.onSubmit(optionId);\n              setComplete(true);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function voteOption(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var voteCountHighest = 0;\n    props.options.map(function (option) {\n      // See if this user has completed the poll\n      props.pollVotes.map(function (vote) {\n        if (vote.user_id == props.currentUserId) setComplete(true);\n      }); // Set the score for the highest amount of votes\n\n      voteCountHighest = props.pollVotes.filter(function (vote) {\n        return vote.option_id == option.id;\n      }).length;\n    });\n    setTotal(props.pollVotes.length);\n    setHighest(voteCountHighest);\n    setExpired(moment(props.expiry).isBefore(moment()));\n  }, [props]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(_JSXStyle, {\n    id: \"4211460005\",\n    __self: this\n  }, \".poll-container.jsx-4211460005{width:100%;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:20px;}.poll-inner.jsx-4211460005{-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.progress-container.jsx-4211460005{margin-bottom:5px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/components/poll.component.js */\"), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"poll-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"poll-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"h4 color-d3 text-left w-100 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"h5 color-d0 text-left w-100 mb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, props.description), !complete && !expired && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, props.options.map(function (option, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-4211460005\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(Button, {\n      text: option.text,\n      theme: \"blue-border\",\n      size: \"full-width\",\n      style: {\n        height: 35\n      },\n      onClick: function onClick() {\n        return voteOption(option.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  })), (complete || expired) && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, props.options.map(function (option, index) {\n    var poll_votes = props.pollVotes.filter(function (vote) {\n      return vote.option_id == option.id;\n    });\n    var percentage = poll_votes.length == 0 ? 0 : Math.floor(poll_votes.length / total * 100);\n    var color = poll_votes ? '#f0f2f5' : poll_votes.length >= highest ? '#e9edf2' : '#f0f2f5';\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-4211460005\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, __jsx(Progress, {\n      percentage: percentage,\n      color: color,\n      text: option.text,\n      labels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, expired && props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"This poll expired \", moment(props.expiry).fromNow()), !expired && props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"This poll expires on \", moment(props.expiry).format('LL')), !expired && !props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"This poll does not expire\")), props.tools && __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    onClick: sharePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Share to channel\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    onClick: updatePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button ml-10 color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Update\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    onClick: confirmDeletePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button ml-10 color-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/components/poll.component.js"],"names":["React","useState","useEffect","Progress","Button","moment","fetch","useMutation","useSubscription","gql","openAppModal","DELETE_POLL","PollComponent","props","complete","setComplete","total","setTotal","highest","setHighest","expired","setExpired","error","setError","deletePoll","deleteData","sharePoll","method","mode","cache","headers","redirect","referrer","body","message","attachments","channelId","payload","id","result","updatePoll","name","url","confirmDeletePoll","confirm","variables","voteOption","optionId","onSubmit","voteCountHighest","options","map","option","pollVotes","vote","user_id","currentUserId","filter","option_id","length","expiry","isBefore","title","description","index","text","height","poll_votes","percentage","Math","floor","color","fromNow","format","tools","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Progress, Button } from '@weekday/elements'\nimport moment from 'moment'\nimport fetch from 'isomorphic-unfetch'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { openAppModal } from '../util'\n\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport default function PollComponent(props) {\n  const [complete, setComplete] = useState(false)\n  const [total, setTotal] = useState(0)\n  const [highest, setHighest] = useState(0)\n  const [expired, setExpired] = useState(0)\n  const [error, setError] = useState(null)\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL)\n\n  const sharePoll = async () => {\n    try {\n      const result = await fetch('http://localhost:8181/v1/webhook', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'token 31473fc6-fee7-11e9-8f0b-362b9e155667',\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          message: 'Yo yo yo',\n          attachments: [],\n          channelId: props.channelId,\n          payload: props.id,\n        }),\n      })\n    } catch (e) {\n      setError('Could not share poll')\n    }\n  }\n\n  const updatePoll = async () => {\n    openAppModal({\n      name: 'Update poll',\n      url: 'http://localhost:3000/update?pollId=' + props.id,\n    })\n  }\n\n  const confirmDeletePoll = async () => {\n    if (confirm(\"Are you sure?\")) {\n      deletePoll({ variables: { id: props.id } })\n    }\n  }\n\n  const voteOption = async (optionId) => {\n    props.onSubmit(optionId)\n    setComplete(true)\n  }\n\n  useEffect(() => {\n    let voteCountHighest = 0\n\n    props.options.map(option => {\n      // See if this user has completed the poll\n      props.pollVotes.map(vote => {\n        if (vote.user_id == props.currentUserId) setComplete(true)\n      })\n\n      // Set the score for the highest amount of votes\n      voteCountHighest = props.pollVotes.filter(vote => vote.option_id == option.id).length\n    })\n\n    setTotal(props.pollVotes.length)\n    setHighest(voteCountHighest)\n    setExpired(moment(props.expiry).isBefore(moment()))\n  }, [props])\n\n  return (\n    <React.Fragment>\n      <style jsx>{`\n        .poll-container {\n          width: 100%;\n          height: fit-content;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n          margin-bottom: 20px;\n        }\n\n        .poll-inner {\n          flex: 1;\n          flex-direction: column;\n          display: flex;\n          align-items: center;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .progress-container {\n          margin-bottom: 5px;\n          width: 100%;\n        }\n      `}</style>\n\n      <div className=\"poll-container\">\n        <div className=\"poll-inner\">\n          <div className=\"h4 color-d3 text-left w-100 mb-0\">{props.title}</div>\n          <div className=\"h5 color-d0 text-left w-100 mb-10\">{props.description}</div>\n\n          {(!complete && !expired) &&\n            <React.Fragment>\n              {props.options.map((option, index) => {\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Button\n                      text={option.text}\n                      theme=\"blue-border\"\n                      size=\"full-width\"\n                      style={{ height: 35 }}\n                      onClick={() => voteOption(option.id)}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          {(complete || expired) &&\n            <React.Fragment>\n              {props.options.map((option, index) => {\n                const poll_votes = props.pollVotes.filter(vote => vote.option_id == option.id)\n                const percentage = poll_votes.length == 0 ? 0 : Math.floor((poll_votes.length / total) * 100)\n                const color = poll_votes\n                                ? '#f0f2f5'\n                                : poll_votes.length >= highest\n                                  ? '#e9edf2'\n                                  : '#f0f2f5'\n\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Progress\n                      percentage={percentage}\n                      color={color}\n                      text={option.text}\n                      labels={true}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"p color-d1 text-left w-100 mt-5\">\n            {(expired && props.expiry) &&\n              <span className=\"mr-10\">This poll expired {moment(props.expiry).fromNow()}</span>\n            }\n            {(!expired && props.expiry) &&\n              <span className=\"mr-10\">This poll expires on {moment(props.expiry).format('LL')}</span>\n            }\n            {(!expired && !props.expiry) &&\n              <span className=\"mr-10\">This poll does not expire</span>\n            }\n          </div>\n\n          {props.tools &&\n            <div className=\"p color-d1 text-left w-100 mt-5\">\n              <strong className=\"button color-blue\" onClick={sharePoll}>Share to channel</strong>\n\n              {(props.currentUserId == props.userId) &&\n                <strong className=\"button ml-10 color-blue\" onClick={updatePoll}>Update</strong>\n              }\n              {(props.currentUserId == props.userId) &&\n                <strong className=\"button ml-10 color-red\" onClick={confirmDeletePoll}>Delete</strong>\n              }\n            </div>\n          }\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}