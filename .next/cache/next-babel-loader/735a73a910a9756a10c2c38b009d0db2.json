{"ast":null,"code":"var _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, withRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport withData from '../config';\nimport PollComponent from '../components/poll.component';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\nconst UPDATE_POLL = gql`\n  mutation update_polls($id: Int, $changes: polls_set_input) {\n    update_polls(\n      where: {id: {_eq: $id}},\n      _set: $changes\n    ) {\n      affected_rows\n      returning {\n        id\n        title\n        description\n      }\n    }\n  }\n`;\nconst ADD_POLL = gql`\n  mutation add_poll($objects: [polls_insert_input!]!) {\n    insert_polls(objects: $objects) {\n      returning {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction Index(props) {\n  const {\n    router: {\n      query: {\n        payload\n      }\n    }\n  } = props;\n  const decodedPayload = decodeURI(payload);\n  const jsonPayload = JSON.parse(decodedPayload);\n  /*\n  console.log(jsonPayload)\n  console.log(\n    encodeURI(\n        JSON.stringify(\n          { userId: '5db7e3c98476242154d43181', channelId: '5db87f04db059a6d8dc8d068' }\n        )\n      )\n  )\n  */\n\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(jsonPayload.userId);\n  const {\n    0: channelId,\n    1: setChannelId\n  } = useState(jsonPayload.channelId);\n  const [addPoll, addData] = useMutation(ADD_POLL);\n  const [updatePoll, updateData] = useMutation(UPDATE_POLL);\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL);\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(gql`\n    subscription {\n      polls(where: { channel_id: { _eq: \"${channelId}\" } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        questions\n        answers {\n          question_id\n          user_id\n        }\n      }\n    }\n  `);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Polls\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/css/styles.css\",\n    rel: \"stylesheet\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/images/favicon.png\",\n    rel: \"shortcut icon\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1390389061\",\n    __self: this\n  }, \"*{margin:0px;padding:0px;}body{background:white;}.container{background:white;width:100%;height:100%;position:absolute;left:0px;top:0px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.error{position:absolute;top:0px;left:0px;width:100%;}.polls-listing-container{-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;padding:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/pages/index.js */\"), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"container column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"polls-listing-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, (loading || !data) && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), (error || !data) && __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Error, {\n    message: \"Error loading polls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })), data && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, data.polls.length == 0 && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"../static/images/no-polls.png\",\n    width: \"60%\",\n    className: \"jsx-1390389061\" + \" \" + \"mb-30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"h3 mb-20 pl-20 pr-20 color-d2 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"There are no polls\"), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"h5 mb-20 pl-20 pr-20 color-d0 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"There are no polls for this channel. Click on the button below to create your first poll.\")), data.polls.map((poll, index) => {\n    return __jsx(PollComponent, {\n      key: index,\n      expiry: poll.expiry,\n      title: poll.title,\n      userId: poll.user_id,\n      currentUserId: userId,\n      description: poll.description,\n      questions: poll.questions || [],\n      answers: poll.answers || [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    });\n  })), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"row justify-content-center mt-30 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Create a poll\",\n    onClick: () => addPoll({\n      variables: {\n        objects: [{\n          title: 'cool',\n          description: 'Nice',\n          channel_id,\n          user_id\n        }]\n      }\n    }),\n    className: \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Delete a poll\",\n    onClick: () => deletePoll({\n      variables: {\n        id: 3\n      }\n    }),\n    className: \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Update a poll\",\n    onClick: () => updatePoll({\n      variables: {\n        id: 1,\n        changes: {\n          title: 'Updated....'\n        }\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })))));\n}\n\nIndex.getInitialProps = context => {\n  const {\n    query: {\n      payload\n    }\n  } = context;\n  return {\n    cool: true\n  };\n};\n\nexport default withData(withRouter(Index));","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/pages/index.js"],"names":["React","useState","useEffect","useRouter","withRouter","Head","fetch","Button","Error","Loading","Notification","Spinner","gql","Query","withData","PollComponent","useMutation","useSubscription","DELETE_POLL","UPDATE_POLL","ADD_POLL","Index","props","router","query","payload","decodedPayload","decodeURI","jsonPayload","JSON","parse","userId","setUserId","channelId","setChannelId","addPoll","addData","updatePoll","updateData","deletePoll","deleteData","loading","error","data","polls","length","map","poll","index","expiry","title","user_id","description","questions","answers","variables","objects","channel_id","id","changes","getInitialProps","context","cool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,aAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,YAAjC,EAA+CC,OAA/C,QAA8D,mBAA9D;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,qBAA7C;AAEA,MAAMC,WAAW,GAAGN,GAAI;;;;;;;;CAAxB;AAUA,MAAMO,WAAW,GAAGP,GAAI;;;;;;;;;;;;;;CAAxB;AAgBA,MAAMQ,QAAQ,GAAGR,GAAI;;;;;;;;;CAArB;;AAWA,SAASS,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAAT;AAAV,MAAoCH,KAA1C;AACA,QAAMI,cAAc,GAAGC,SAAS,CAACF,OAAD,CAAhC;AACA,QAAMG,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,cAAX,CAApB;AACA;;;;;;;;;;;AAUA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsB/B,QAAQ,CAAC2B,WAAW,CAACG,MAAb,CAApC;AACA,QAAM;AAAA,OAACE,SAAD;AAAA,OAAYC;AAAZ,MAA4BjC,QAAQ,CAAC2B,WAAW,CAACK,SAAb,CAA1C;AACA,QAAM,CAACE,OAAD,EAAUC,OAAV,IAAqBpB,WAAW,CAACI,QAAD,CAAtC;AACA,QAAM,CAACiB,UAAD,EAAaC,UAAb,IAA2BtB,WAAW,CAACG,WAAD,CAA5C;AACA,QAAM,CAACoB,UAAD,EAAaC,UAAb,IAA2BxB,WAAW,CAACE,WAAD,CAA5C;AACA,QAAM;AAAEuB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2B1B,eAAe,CAACL,GAAI;;2CAEZqB,SAAU;;;;;;;;;;;;;;GAFH,CAAhD;AAkBA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,uCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,IAAI,EAAC,wBAAX;AAAoC,IAAA,GAAG,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAM,IAAA,IAAI,EAAC,4BAAX;AAAwC,IAAA,GAAG,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAAA;AAAA;AAAA,4ySAiDE;AAAA,wCAAe,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACQ,OAAO,IAAI,CAACE,IAAb,KAAsB,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,EAEG,CAACD,KAAK,IAAI,CAACC,IAAX,KAAoB;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuB,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAFvB,EAGGA,IAAI,IACH,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,IAAI,CAACC,KAAL,CAAWC,MAAX,IAAqB,CAAtB,IACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,+BAAT;AAAyC,IAAA,KAAK,EAAC,KAA/C;AAAA,wCAA+D,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA,wCAAe,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,EAGE;AAAA,wCAAe,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGAHF,CAFJ,EASGF,IAAI,CAACC,KAAL,CAAWE,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,WACE,MAAC,aAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,MAAM,EAAED,IAAI,CAACE,MAFf;AAGE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,MAAA,MAAM,EAAEH,IAAI,CAACI,OAJf;AAKE,MAAA,aAAa,EAAEpB,MALjB;AAME,MAAA,WAAW,EAAEgB,IAAI,CAACK,WANpB;AAOE,MAAA,SAAS,EAAEL,IAAI,CAACM,SAAL,IAAkB,EAP/B;AAQE,MAAA,OAAO,EAAEN,IAAI,CAACO,OAAL,IAAgB,EAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD,GAbA,CATH,CAJJ,EA8BE;AAAA,wCAAe,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,OAAO,EAAE,MAAMnB,OAAO,CAAC;AAAEoB,MAAAA,SAAS,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAC;AAAEN,UAAAA,KAAK,EAAE,MAAT;AAAiBE,UAAAA,WAAW,EAAE,MAA9B;AAAsCK,UAAAA,UAAtC;AAAkDN,UAAAA;AAAlD,SAAD;AAAX;AAAb,KAAD,CAJxB;AAKE,IAAA,SAAS,EAAC,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,OAAO,EAAE,MAAMZ,UAAU,CAAC;AAAEgB,MAAAA,SAAS,EAAE;AAAEG,QAAAA,EAAE,EAAE;AAAN;AAAb,KAAD,CAJ3B;AAKE,IAAA,SAAS,EAAC,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,OAAO,EAAE,MAAMrB,UAAU,CAAC;AAAEkB,MAAAA,SAAS,EAAE;AAAEG,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAET,UAAAA,KAAK,EAAE;AAAT;AAAlB;AAAb,KAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CA9BF,CADF,CAjDF,CADF;AA2GD;;AAED7B,KAAK,CAACuC,eAAN,GAAyBC,OAAD,IAAa;AACnC,QAAM;AAAErC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,MAAyBoC,OAA/B;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAND;;AAQA,eAAehD,QAAQ,CAACV,UAAU,CAACiB,KAAD,CAAX,CAAvB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter, withRouter } from 'next/router'\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport withData from '../config'\nimport PollComponent from '../components/poll.component'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\n\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nconst UPDATE_POLL = gql`\n  mutation update_polls($id: Int, $changes: polls_set_input) {\n    update_polls(\n      where: {id: {_eq: $id}},\n      _set: $changes\n    ) {\n      affected_rows\n      returning {\n        id\n        title\n        description\n      }\n    }\n  }\n`;\n\nconst ADD_POLL = gql`\n  mutation add_poll($objects: [polls_insert_input!]!) {\n    insert_polls(objects: $objects) {\n      returning {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction Index(props) {\n  const { router: { query: { payload } }} = props\n  const decodedPayload = decodeURI(payload)\n  const jsonPayload = JSON.parse(decodedPayload)\n  /*\n  console.log(jsonPayload)\n  console.log(\n    encodeURI(\n        JSON.stringify(\n          { userId: '5db7e3c98476242154d43181', channelId: '5db87f04db059a6d8dc8d068' }\n        )\n      )\n  )\n  */\n  const [userId, setUserId] = useState(jsonPayload.userId)\n  const [channelId, setChannelId] = useState(jsonPayload.channelId)\n  const [addPoll, addData] = useMutation(ADD_POLL)\n  const [updatePoll, updateData] = useMutation(UPDATE_POLL)\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL)\n  const { loading, error, data } = useSubscription(gql`\n    subscription {\n      polls(where: { channel_id: { _eq: \"${channelId}\" } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        questions\n        answers {\n          question_id\n          user_id\n        }\n      }\n    }\n  `)\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Polls</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link href=\"/static/css/styles.css\" rel=\"stylesheet\" />\n        <link href=\"/static/images/favicon.png\" rel=\"shortcut icon\" />\n      </Head>\n\n      <style global jsx>{`\n        * {\n          margin: 0px;\n          padding: 0px;\n        }\n\n        body {\n          background: white;\n        }\n\n        .container {\n          background: white;\n          width: 100%;\n          height: 100%;\n          position: absolute;\n          left: 0px;\n          top: 0px;\n          display: flex;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .error {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          width: 100%;\n        }\n\n        .polls-listing-container {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          align-content: center;\n          justify-content: flex-start;\n          padding: 20px;\n        }\n      `}</style>\n\n      <div className=\"container column\">\n        <div className=\"polls-listing-container\">\n          {(loading || !data) && <Spinner />}\n          {(error || !data) && <div className=\"error\"><Error message=\"Error loading polls\" /></div>}\n          {data &&\n            <React.Fragment>\n              {(data.polls.length == 0) &&\n                <React.Fragment>\n                  <img src=\"../static/images/no-polls.png\" width=\"60%\" className=\"mb-30\"/>\n                  <div className=\"h3 mb-20 pl-20 pr-20 color-d2 text-center\">There are no polls</div>\n                  <div className=\"h5 mb-20 pl-20 pr-20 color-d0 text-center\">There are no polls for this channel. Click on the button below to create your first poll.</div>\n                </React.Fragment>\n              }\n\n              {data.polls.map((poll, index) => {\n                return (\n                  <PollComponent\n                    key={index}\n                    expiry={poll.expiry}\n                    title={poll.title}\n                    userId={poll.user_id}\n                    currentUserId={userId}\n                    description={poll.description}\n                    questions={poll.questions || []}\n                    answers={poll.answers || []}\n                  />\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"row justify-content-center mt-30 w-100\">\n            <Button\n              size=\"small\"\n              theme=\"blue-border\"\n              text=\"Create a poll\"\n              onClick={() => addPoll({ variables: { objects: [{ title: 'cool', description: 'Nice', channel_id, user_id }] } })}\n              className=\"mr-10\"\n            />\n            <Button\n              size=\"small\"\n              theme=\"blue-border\"\n              text=\"Delete a poll\"\n              onClick={() => deletePoll({ variables: { id: 3 } })}\n              className=\"mr-10\"\n            />\n            <Button\n              size=\"small\"\n              theme=\"blue-border\"\n              text=\"Update a poll\"\n              onClick={() => updatePoll({ variables: { id: 1, changes: { title: 'Updated....' } } })}\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nIndex.getInitialProps = (context) => {\n  const { query: { payload } } = context;\n\n  return {\n    cool: true\n  }\n}\n\nexport default withData(withRouter(Index))\n"]},"metadata":{},"sourceType":"module"}