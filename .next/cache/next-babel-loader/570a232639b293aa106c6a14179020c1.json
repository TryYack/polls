{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/components/poll.component.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Progress, Button } from '@weekday/elements';\nimport moment from 'moment';\nimport fetch from 'isomorphic-unfetch';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nimport { Error } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { openAppModal } from '../util';\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\nexport default function PollComponent(props) {\n  const {\n    0: complete,\n    1: setComplete\n  } = useState(false);\n  const {\n    0: total,\n    1: setTotal\n  } = useState(0);\n  const {\n    0: highest,\n    1: setHighest\n  } = useState(0);\n  const {\n    0: expired,\n    1: setExpired\n  } = useState(0);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL);\n\n  const sharePoll = async () => {\n    try {\n      const result = await fetch('http://localhost:8181/v1/webhook', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'token 31473fc6-fee7-11e9-8f0b-362b9e155667'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: _JSON$stringify({\n          message: 'Yo yo yo',\n          attachments: [],\n          channelId: props.channelId,\n          payload: props.id\n        })\n      });\n    } catch (e) {\n      setError('Could not share poll');\n      setTimeout(() => setError(null), 5000);\n    }\n  };\n\n  const updatePoll = async () => {\n    openAppModal({\n      name: 'Update poll',\n      url: 'http://localhost:3000/update?pollId=' + props.id\n    });\n  };\n\n  const confirmDeletePoll = async () => {\n    if (confirm(\"Are you sure?\")) {\n      deletePoll({\n        variables: {\n          id: props.id\n        }\n      });\n    }\n  };\n\n  const voteOption = async optionId => {\n    props.onSubmit(optionId);\n    setComplete(true);\n  };\n\n  useEffect(() => {\n    let voteCountHighest = 0;\n    props.options.map(option => {\n      // See if this user has completed the poll\n      props.pollVotes.map(vote => {\n        if (vote.user_id == props.currentUserId) setComplete(true);\n      }); // Set the score for the highest amount of votes\n\n      voteCountHighest = props.pollVotes.filter(vote => vote.option_id == option.id).length;\n    });\n    setTotal(props.pollVotes.length);\n    setHighest(voteCountHighest);\n    setExpired(moment(props.expiry).isBefore(moment()));\n  }, [props]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(_JSXStyle, {\n    id: \"4211460005\",\n    __self: this\n  }, \".poll-container.jsx-4211460005{width:100%;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:20px;}.poll-inner.jsx-4211460005{-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.progress-container.jsx-4211460005{margin-bottom:5px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/components/poll.component.js */\"), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"poll-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, error && __jsx(Error, {\n    message: \"Error loading polls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"poll-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"h4 color-d3 text-left w-100 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"h5 color-d0 text-left w-100 mb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, props.description), !complete && !expired && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, props.options.map((option, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-4211460005\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, __jsx(Button, {\n      text: option.text,\n      theme: \"blue-border\",\n      size: \"full-width\",\n      style: {\n        height: 35\n      },\n      onClick: () => voteOption(option.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }));\n  })), (complete || expired) && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, props.options.map((option, index) => {\n    const poll_votes = props.pollVotes.filter(vote => vote.option_id == option.id);\n    const percentage = poll_votes.length == 0 ? 0 : Math.floor(poll_votes.length / total * 100);\n    const color = poll_votes ? '#f0f2f5' : poll_votes.length >= highest ? '#e9edf2' : '#f0f2f5';\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-4211460005\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(Progress, {\n      percentage: percentage,\n      color: color,\n      text: option.text,\n      labels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, expired && props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"This poll expired \", moment(props.expiry).fromNow()), !expired && props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"This poll expires on \", moment(props.expiry).format('LL')), !expired && !props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"This poll does not expire\")), props.tools && __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    onClick: sharePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Share to channel\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    onClick: updatePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button ml-10 color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Update\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    onClick: confirmDeletePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button ml-10 color-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/components/poll.component.js"],"names":["React","useState","useEffect","Progress","Button","moment","fetch","useMutation","useSubscription","Error","gql","openAppModal","DELETE_POLL","PollComponent","props","complete","setComplete","total","setTotal","highest","setHighest","expired","setExpired","error","setError","deletePoll","deleteData","sharePoll","result","method","mode","cache","headers","redirect","referrer","body","message","attachments","channelId","payload","id","e","setTimeout","updatePoll","name","url","confirmDeletePoll","confirm","variables","voteOption","optionId","onSubmit","voteCountHighest","options","map","option","pollVotes","vote","user_id","currentUserId","filter","option_id","length","expiry","isBefore","title","description","index","text","height","poll_votes","percentage","Math","floor","color","fromNow","format","tools","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Progress, Button } from '@weekday/elements'\nimport moment from 'moment'\nimport fetch from 'isomorphic-unfetch'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\nimport { Error } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { openAppModal } from '../util'\n\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport default function PollComponent(props) {\n  const [complete, setComplete] = useState(false)\n  const [total, setTotal] = useState(0)\n  const [highest, setHighest] = useState(0)\n  const [expired, setExpired] = useState(0)\n  const [error, setError] = useState(null)\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL)\n\n  const sharePoll = async () => {\n    try {\n      const result = await fetch('http://localhost:8181/v1/webhook', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'token 31473fc6-fee7-11e9-8f0b-362b9e155667',\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n          message: 'Yo yo yo',\n          attachments: [],\n          channelId: props.channelId,\n          payload: props.id,\n        }),\n      })\n    } catch (e) {\n      setError('Could not share poll')\n      setTimeout(() => setError(null), 5000)\n    }\n  }\n\n  const updatePoll = async () => {\n    openAppModal({\n      name: 'Update poll',\n      url: 'http://localhost:3000/update?pollId=' + props.id,\n    })\n  }\n\n  const confirmDeletePoll = async () => {\n    if (confirm(\"Are you sure?\")) {\n      deletePoll({ variables: { id: props.id } })\n    }\n  }\n\n  const voteOption = async (optionId) => {\n    props.onSubmit(optionId)\n    setComplete(true)\n  }\n\n  useEffect(() => {\n    let voteCountHighest = 0\n\n    props.options.map(option => {\n      // See if this user has completed the poll\n      props.pollVotes.map(vote => {\n        if (vote.user_id == props.currentUserId) setComplete(true)\n      })\n\n      // Set the score for the highest amount of votes\n      voteCountHighest = props.pollVotes.filter(vote => vote.option_id == option.id).length\n    })\n\n    setTotal(props.pollVotes.length)\n    setHighest(voteCountHighest)\n    setExpired(moment(props.expiry).isBefore(moment()))\n  }, [props])\n\n  return (\n    <React.Fragment>\n      <style jsx>{`\n        .poll-container {\n          width: 100%;\n          height: fit-content;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n          margin-bottom: 20px;\n        }\n\n        .poll-inner {\n          flex: 1;\n          flex-direction: column;\n          display: flex;\n          align-items: center;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .progress-container {\n          margin-bottom: 5px;\n          width: 100%;\n        }\n      `}</style>\n\n      <div className=\"poll-container\">\n        {error && <Error message=\"Error loading polls\" />}\n        \n        <div className=\"poll-inner\">\n          <div className=\"h4 color-d3 text-left w-100 mb-0\">{props.title}</div>\n          <div className=\"h5 color-d0 text-left w-100 mb-10\">{props.description}</div>\n\n          {(!complete && !expired) &&\n            <React.Fragment>\n              {props.options.map((option, index) => {\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Button\n                      text={option.text}\n                      theme=\"blue-border\"\n                      size=\"full-width\"\n                      style={{ height: 35 }}\n                      onClick={() => voteOption(option.id)}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          {(complete || expired) &&\n            <React.Fragment>\n              {props.options.map((option, index) => {\n                const poll_votes = props.pollVotes.filter(vote => vote.option_id == option.id)\n                const percentage = poll_votes.length == 0 ? 0 : Math.floor((poll_votes.length / total) * 100)\n                const color = poll_votes\n                                ? '#f0f2f5'\n                                : poll_votes.length >= highest\n                                  ? '#e9edf2'\n                                  : '#f0f2f5'\n\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Progress\n                      percentage={percentage}\n                      color={color}\n                      text={option.text}\n                      labels={true}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"p color-d1 text-left w-100 mt-5\">\n            {(expired && props.expiry) &&\n              <span className=\"mr-10\">This poll expired {moment(props.expiry).fromNow()}</span>\n            }\n            {(!expired && props.expiry) &&\n              <span className=\"mr-10\">This poll expires on {moment(props.expiry).format('LL')}</span>\n            }\n            {(!expired && !props.expiry) &&\n              <span className=\"mr-10\">This poll does not expire</span>\n            }\n          </div>\n\n          {props.tools &&\n            <div className=\"p color-d1 text-left w-100 mt-5\">\n              <strong className=\"button color-blue\" onClick={sharePoll}>Share to channel</strong>\n\n              {(props.currentUserId == props.userId) &&\n                <strong className=\"button ml-10 color-blue\" onClick={updatePoll}>Update</strong>\n              }\n              {(props.currentUserId == props.userId) &&\n                <strong className=\"button ml-10 color-red\" onClick={confirmDeletePoll}>Delete</strong>\n              }\n            </div>\n          }\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}