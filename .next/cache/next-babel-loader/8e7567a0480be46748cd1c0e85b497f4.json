{"ast":null,"code":"var _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, withRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport withData from '../config';\nimport PollComponent from '../components/poll.component';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nconst ADD_VOTE = gql`\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\n    insert_poll_votes(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nfunction Index(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  const {\n    router: {\n      query\n    }\n  } = props;\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(query.userId);\n  const {\n    0: channelId,\n    1: setChannelId\n  } = useState(query.channelId);\n  const [addVote, addVoteData] = useMutation(ADD_VOTE);\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(gql`\n    subscription {\n      polls(where: { channel_id: { _eq: \"${channelId}\" } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        options\n        poll_votes {\n          option_id\n          user_id\n        }\n      }\n    }\n  `);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Polls\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/css/styles.css\",\n    rel: \"stylesheet\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/images/favicon.png\",\n    rel: \"shortcut icon\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1390389061\",\n    __self: this\n  }, \"*{margin:0px;padding:0px;}body{background:white;}.container{background:white;width:100%;height:100%;position:absolute;left:0px;top:0px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.error{position:absolute;top:0px;left:0px;width:100%;}.polls-listing-container{-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;padding:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvcGFnZXMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0R5QixBQUdzQixBQUtNLEFBSUEsQUFhQyxBQU9YLFdBNUJLLE1BS2QsQUFJYSxDQWFILEtBckJWLEdBc0JXLEVBYkcsS0FtQkMsRUFMRixLQWJPLE1BY3BCLFlBYlcsU0FDRCxRQUNLLGdDQWdCUywwQ0FmRixvQ0FnQkQsNkRBZkUsZ0NBZ0JBLDRDQWZFLGdDQWdCSSxtRUFmN0Isc0NBZ0JlLGFBQ2YiLCJmaWxlIjoiL1VzZXJzL2pvZHVwbGVzc2lzL1dvcmsvV2Vla2RheS9wb2xscy9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1c2VSb3V0ZXIsIHdpdGhSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcidcbmltcG9ydCBIZWFkIGZyb20gJ25leHQvaGVhZCdcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXG5pbXBvcnQgeyBCdXR0b24sIEVycm9yLCBMb2FkaW5nLCBOb3RpZmljYXRpb24sIFNwaW5uZXIgfSBmcm9tICdAd2Vla2RheS9lbGVtZW50cydcbmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnXG5pbXBvcnQgeyBRdWVyeSB9IGZyb20gJ3JlYWN0LWFwb2xsbydcbmltcG9ydCB3aXRoRGF0YSBmcm9tICcuLi9jb25maWcnXG5pbXBvcnQgUG9sbENvbXBvbmVudCBmcm9tICcuLi9jb21wb25lbnRzL3BvbGwuY29tcG9uZW50J1xuaW1wb3J0IHsgdXNlTXV0YXRpb24sIHVzZVN1YnNjcmlwdGlvbiB9IGZyb20gJ0BhcG9sbG8vcmVhY3QtaG9va3MnXG5cbmNvbnN0IEFERF9WT1RFID0gZ3FsYFxuICBtdXRhdGlvbiBhZGRfdm90ZSgkb2JqZWN0czogW3BvbGxfdm90ZXNfaW5zZXJ0X2lucHV0IV0hKSB7XG4gICAgaW5zZXJ0X3BvbGxfdm90ZXMob2JqZWN0czogJG9iamVjdHMpIHtcbiAgICAgIHJldHVybmluZyB7XG4gICAgICAgIGlkXG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG5mdW5jdGlvbiBJbmRleChwcm9wcykge1xuICAvLyA/dXNlcklkPTVkYjdlM2M5ODQ3NjI0MjE1NGQ0MzE4MSZjaGFubmVsSWQ9NWRiODdmMDRkYjA1OWE2ZDhkYzhkMDY4XG4gIGNvbnN0IHsgcm91dGVyOiB7IHF1ZXJ5IH19ID0gcHJvcHNcbiAgY29uc3QgW3VzZXJJZCwgc2V0VXNlcklkXSA9IHVzZVN0YXRlKHF1ZXJ5LnVzZXJJZClcbiAgY29uc3QgW2NoYW5uZWxJZCwgc2V0Q2hhbm5lbElkXSA9IHVzZVN0YXRlKHF1ZXJ5LmNoYW5uZWxJZClcbiAgY29uc3QgW2FkZFZvdGUsIGFkZFZvdGVEYXRhXSA9IHVzZU11dGF0aW9uKEFERF9WT1RFKVxuICBjb25zdCB7IGxvYWRpbmcsIGVycm9yLCBkYXRhIH0gPSB1c2VTdWJzY3JpcHRpb24oZ3FsYFxuICAgIHN1YnNjcmlwdGlvbiB7XG4gICAgICBwb2xscyh3aGVyZTogeyBjaGFubmVsX2lkOiB7IF9lcTogXCIke2NoYW5uZWxJZH1cIiB9IH0pIHtcbiAgICAgICAgaWRcbiAgICAgICAgdGl0bGVcbiAgICAgICAgZGVzY3JpcHRpb25cbiAgICAgICAgdXNlcl9pZFxuICAgICAgICBjaGFubmVsX2lkXG4gICAgICAgIGV4cGlyeVxuICAgICAgICBvcHRpb25zXG4gICAgICAgIHBvbGxfdm90ZXMge1xuICAgICAgICAgIG9wdGlvbl9pZFxuICAgICAgICAgIHVzZXJfaWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgYClcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+UG9sbHM8L3RpdGxlPlxuICAgICAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwiaW5pdGlhbC1zY2FsZT0xLjAsIHdpZHRoPWRldmljZS13aWR0aFwiIC8+XG4gICAgICAgIDxsaW5rIGhyZWY9XCIvc3RhdGljL2Nzcy9zdHlsZXMuY3NzXCIgcmVsPVwic3R5bGVzaGVldFwiIC8+XG4gICAgICAgIDxsaW5rIGhyZWY9XCIvc3RhdGljL2ltYWdlcy9mYXZpY29uLnBuZ1wiIHJlbD1cInNob3J0Y3V0IGljb25cIiAvPlxuICAgICAgPC9IZWFkPlxuXG4gICAgICA8c3R5bGUgZ2xvYmFsIGpzeD57YFxuICAgICAgICAqIHtcbiAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgIH1cblxuICAgICAgICBib2R5IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICAgIHRvcDogMHB4O1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgLmVycm9yIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiAwcHg7XG4gICAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG5cbiAgICAgICAgLnBvbGxzLWxpc3RpbmctY29udGFpbmVyIHtcbiAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBjb2x1bW5cIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb2xscy1saXN0aW5nLWNvbnRhaW5lclwiPlxuICAgICAgICAgIHsobG9hZGluZyB8fCAhZGF0YSkgJiYgPFNwaW5uZXIgLz59XG4gICAgICAgICAgeyhlcnJvciB8fCAhZGF0YSkgJiYgPGRpdiBjbGFzc05hbWU9XCJlcnJvclwiPjxFcnJvciBtZXNzYWdlPVwiRXJyb3IgbG9hZGluZyBwb2xsc1wiIC8+PC9kaXY+fVxuXG4gICAgICAgICAge2RhdGEgJiZcbiAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgeyhkYXRhLnBvbGxzLmxlbmd0aCA9PSAwKSAmJlxuICAgICAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiLi4vc3RhdGljL2ltYWdlcy9uby1wb2xscy5wbmdcIiB3aWR0aD1cIjYwJVwiIGNsYXNzTmFtZT1cIm1iLTMwXCIvPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoMyBtYi0yMCBwbC0yMCBwci0yMCBjb2xvci1kMiB0ZXh0LWNlbnRlclwiPlRoZXJlIGFyZSBubyBwb2xsczwvZGl2PlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoNSBtYi0yMCBwbC0yMCBwci0yMCBjb2xvci1kMCB0ZXh0LWNlbnRlclwiPlRoZXJlIGFyZSBubyBwb2xscyBmb3IgdGhpcyBjaGFubmVsLiBDbGljayBvbiB0aGUgYnV0dG9uIGJlbG93IHRvIGNyZWF0ZSB5b3VyIGZpcnN0IHBvbGwuPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHtkYXRhLnBvbGxzLm1hcCgocG9sbCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgPFBvbGxDb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgaWQ9e3BvbGwuaWR9XG4gICAgICAgICAgICAgICAgICAgIGV4cGlyeT17cG9sbC5leHBpcnl9XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPXtwb2xsLnRpdGxlfVxuICAgICAgICAgICAgICAgICAgICB1c2VySWQ9e3BvbGwudXNlcl9pZH1cbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3BvbGwuZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM9e3BvbGwub3B0aW9ucyB8fCBbXX1cbiAgICAgICAgICAgICAgICAgICAgcG9sbFZvdGVzPXtwb2xsLnBvbGxfdm90ZXMgfHwgW119XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRVc2VySWQ9e3VzZXJJZH1cbiAgICAgICAgICAgICAgICAgICAgb25TdWJtaXQ9eyhvcHRpb25JZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGFkZFZvdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdHM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25faWQ6IG9wdGlvbklkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9sbF9pZDogcG9sbElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgIH1cblxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIgbXQtMzAgdy0xMDBcIj5cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcbiAgICAgICAgICAgICAgdGhlbWU9XCJibHVlLWJvcmRlclwiXG4gICAgICAgICAgICAgIHRleHQ9XCJDcmVhdGUgYSBuZXcgcG9sbFwiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGNvbnNvbGUubG9nKCdPb3BlbiB3aW5kb3cnKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoRGF0YSh3aXRoUm91dGVyKEluZGV4KSlcbiJdfQ== */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/pages/index.js */\"), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"container column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"polls-listing-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, (loading || !data) && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), (error || !data) && __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Error, {\n    message: \"Error loading polls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), data && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, data.polls.length == 0 && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"../static/images/no-polls.png\",\n    width: \"60%\",\n    className: \"jsx-1390389061\" + \" \" + \"mb-30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"h3 mb-20 pl-20 pr-20 color-d2 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"There are no polls\"), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"h5 mb-20 pl-20 pr-20 color-d0 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"There are no polls for this channel. Click on the button below to create your first poll.\")), data.polls.map((poll, index) => {\n    return __jsx(PollComponent, {\n      key: index,\n      id: poll.id,\n      expiry: poll.expiry,\n      title: poll.title,\n      userId: poll.user_id,\n      description: poll.description,\n      options: poll.options || [],\n      pollVotes: poll.poll_votes || [],\n      currentUserId: userId,\n      onSubmit: optionId => {\n        addVote({\n          variables: {\n            objects: [{\n              option_id: optionId,\n              poll_id: pollId,\n              user_id: userId\n            }]\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    });\n  })), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"row justify-content-center mt-30 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Create a new poll\",\n    onClick: () => console.log('Oopen window'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })))));\n}\n\nexport default withData(withRouter(Index));","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/pages/index.js"],"names":["React","useState","useEffect","useRouter","withRouter","Head","fetch","Button","Error","Loading","Notification","Spinner","gql","Query","withData","PollComponent","useMutation","useSubscription","ADD_VOTE","Index","props","router","query","userId","setUserId","channelId","setChannelId","addVote","addVoteData","loading","error","data","polls","length","map","poll","index","id","expiry","title","user_id","description","options","poll_votes","optionId","variables","objects","option_id","poll_id","pollId","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter, withRouter } from 'next/router'\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport withData from '../config'\nimport PollComponent from '../components/poll.component'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\n\nconst ADD_VOTE = gql`\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\n    insert_poll_votes(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nfunction Index(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  const { router: { query }} = props\n  const [userId, setUserId] = useState(query.userId)\n  const [channelId, setChannelId] = useState(query.channelId)\n  const [addVote, addVoteData] = useMutation(ADD_VOTE)\n  const { loading, error, data } = useSubscription(gql`\n    subscription {\n      polls(where: { channel_id: { _eq: \"${channelId}\" } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        options\n        poll_votes {\n          option_id\n          user_id\n        }\n      }\n    }\n  `)\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Polls</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link href=\"/static/css/styles.css\" rel=\"stylesheet\" />\n        <link href=\"/static/images/favicon.png\" rel=\"shortcut icon\" />\n      </Head>\n\n      <style global jsx>{`\n        * {\n          margin: 0px;\n          padding: 0px;\n        }\n\n        body {\n          background: white;\n        }\n\n        .container {\n          background: white;\n          width: 100%;\n          height: 100%;\n          position: absolute;\n          left: 0px;\n          top: 0px;\n          display: flex;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .error {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          width: 100%;\n        }\n\n        .polls-listing-container {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          align-content: center;\n          justify-content: flex-start;\n          padding: 20px;\n        }\n      `}</style>\n\n      <div className=\"container column\">\n        <div className=\"polls-listing-container\">\n          {(loading || !data) && <Spinner />}\n          {(error || !data) && <div className=\"error\"><Error message=\"Error loading polls\" /></div>}\n\n          {data &&\n            <React.Fragment>\n              {(data.polls.length == 0) &&\n                <React.Fragment>\n                  <img src=\"../static/images/no-polls.png\" width=\"60%\" className=\"mb-30\"/>\n                  <div className=\"h3 mb-20 pl-20 pr-20 color-d2 text-center\">There are no polls</div>\n                  <div className=\"h5 mb-20 pl-20 pr-20 color-d0 text-center\">There are no polls for this channel. Click on the button below to create your first poll.</div>\n                </React.Fragment>\n              }\n\n              {data.polls.map((poll, index) => {\n                return (\n                  <PollComponent\n                    key={index}\n                    id={poll.id}\n                    expiry={poll.expiry}\n                    title={poll.title}\n                    userId={poll.user_id}\n                    description={poll.description}\n                    options={poll.options || []}\n                    pollVotes={poll.poll_votes || []}\n                    currentUserId={userId}\n                    onSubmit={(optionId) => {\n                      addVote({\n                        variables: {\n                          objects: [\n                            {\n                              option_id: optionId,\n                              poll_id: pollId,\n                              user_id: userId,\n                            }\n                          ]\n                        }\n                      })\n                    }}\n                  />\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"row justify-content-center mt-30 w-100\">\n            <Button\n              size=\"small\"\n              theme=\"blue-border\"\n              text=\"Create a new poll\"\n              onClick={() => console.log('Oopen window')}\n            />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withData(withRouter(Index))\n"]},"metadata":{},"sourceType":"module"}