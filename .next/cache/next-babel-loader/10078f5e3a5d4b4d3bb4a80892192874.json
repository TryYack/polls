{"ast":null,"code":"var _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/pages/message.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, withRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport withData from '../config';\nimport PollComponent from '../components/poll.component';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nconst ADD_VOTE = gql`\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\n    insert_poll_votes(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nfunction Message(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  const {\n    router: {\n      query\n    }\n  } = props;\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(query.userId);\n  const {\n    0: channelId,\n    1: setChannelId\n  } = useState(query.channelId);\n  const {\n    0: pollId,\n    1: setPollId\n  } = useState(query.payload);\n  const [addVote, addVoteData] = useMutation(ADD_VOTE);\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(gql`\n    subscription {\n      polls(where: { id: { _eq: ${pollId} } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        options\n        poll_votes {\n          user_id\n          option_id\n        }\n      }\n    }\n  `);\n  useEffect(() => {\n    document.addEventListener('readystatechange', event => {\n      if (event.target.readyState === \"complete\") {\n        setTimeout(() => {\n          window.location.search.split('&').map(q => {\n            const parts = q.split('=');\n\n            if (parts[0] == 'weekdayId') {\n              window.top.postMessage({\n                type: 'weekday',\n                payload: {\n                  weekdayId: parts[1],\n                  scrollHeight: document.documentElement.scrollHeight\n                }\n              }, '*');\n            }\n          });\n        }, 100);\n      }\n    }, false);\n  }, [loading]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Polls\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/css/styles.css\",\n    rel: \"stylesheet\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/images/favicon.png\",\n    rel: \"shortcut icon\",\n    className: \"jsx-1590883482\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1590883482\",\n    __self: this\n  }, \"*{margin:0px;padding:0px;}body{background:white;overflow:scroll;}.container{background:white;padding:20px;}.error{position:absolute;top:0px;left:0px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2R1cGxlc3Npcy9Xb3JrL1dlZWtkYXkvcG9sbHMvcGFnZXMvbWVzc2FnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RXlCLEFBR3NCLEFBS00sQUFLQSxBQUtDLFdBZE4sTUFLSSxBQUtILENBS0wsS0FkVixHQWVXLElBTFgsR0FMQSxFQVdhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2pvZHVwbGVzc2lzL1dvcmsvV2Vla2RheS9wb2xscy9wYWdlcy9tZXNzYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVJvdXRlciwgd2l0aFJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJ1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJ1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCdcbmltcG9ydCB7IEJ1dHRvbiwgRXJyb3IsIExvYWRpbmcsIE5vdGlmaWNhdGlvbiwgU3Bpbm5lciB9IGZyb20gJ0B3ZWVrZGF5L2VsZW1lbnRzJ1xuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSAncmVhY3QtYXBvbGxvJ1xuaW1wb3J0IHdpdGhEYXRhIGZyb20gJy4uL2NvbmZpZydcbmltcG9ydCBQb2xsQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudHMvcG9sbC5jb21wb25lbnQnXG5pbXBvcnQgeyB1c2VNdXRhdGlvbiwgdXNlU3Vic2NyaXB0aW9uIH0gZnJvbSAnQGFwb2xsby9yZWFjdC1ob29rcydcblxuY29uc3QgQUREX1ZPVEUgPSBncWxgXG4gIG11dGF0aW9uIGFkZF92b3RlKCRvYmplY3RzOiBbcG9sbF92b3Rlc19pbnNlcnRfaW5wdXQhXSEpIHtcbiAgICBpbnNlcnRfcG9sbF92b3RlcyhvYmplY3RzOiAkb2JqZWN0cykge1xuICAgICAgcmV0dXJuaW5nIHtcbiAgICAgICAgaWRcbiAgICAgIH1cbiAgICB9XG4gIH1cbmA7XG5cbmZ1bmN0aW9uIE1lc3NhZ2UocHJvcHMpIHtcbiAgLy8gP3VzZXJJZD01ZGI3ZTNjOTg0NzYyNDIxNTRkNDMxODEmY2hhbm5lbElkPTVkYjg3ZjA0ZGIwNTlhNmQ4ZGM4ZDA2OFxuICBjb25zdCB7IHJvdXRlcjogeyBxdWVyeSB9fSA9IHByb3BzXG4gIGNvbnN0IFt1c2VySWQsIHNldFVzZXJJZF0gPSB1c2VTdGF0ZShxdWVyeS51c2VySWQpXG4gIGNvbnN0IFtjaGFubmVsSWQsIHNldENoYW5uZWxJZF0gPSB1c2VTdGF0ZShxdWVyeS5jaGFubmVsSWQpXG4gIGNvbnN0IFtwb2xsSWQsIHNldFBvbGxJZF0gPSB1c2VTdGF0ZShxdWVyeS5wYXlsb2FkKVxuICBjb25zdCBbYWRkVm90ZSwgYWRkVm90ZURhdGFdID0gdXNlTXV0YXRpb24oQUREX1ZPVEUpXG4gIGNvbnN0IHsgbG9hZGluZywgZXJyb3IsIGRhdGEgfSA9IHVzZVN1YnNjcmlwdGlvbihncWxgXG4gICAgc3Vic2NyaXB0aW9uIHtcbiAgICAgIHBvbGxzKHdoZXJlOiB7IGlkOiB7IF9lcTogJHtwb2xsSWR9IH0gfSkge1xuICAgICAgICBpZFxuICAgICAgICB0aXRsZVxuICAgICAgICBkZXNjcmlwdGlvblxuICAgICAgICB1c2VyX2lkXG4gICAgICAgIGNoYW5uZWxfaWRcbiAgICAgICAgZXhwaXJ5XG4gICAgICAgIG9wdGlvbnNcbiAgICAgICAgcG9sbF92b3RlcyB7XG4gICAgICAgICAgdXNlcl9pZFxuICAgICAgICAgIG9wdGlvbl9pZFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBgKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncmVhZHlzdGF0ZWNoYW5nZScsIGV2ZW50ID0+IHtcbiAgICAgIGlmIChldmVudC50YXJnZXQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3BsaXQoJyYnKS5tYXAocSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwYXJ0cyA9IHEuc3BsaXQoJz0nKVxuXG4gICAgICAgICAgICBpZiAocGFydHNbMF0gPT0gJ3dlZWtkYXlJZCcpIHtcbiAgICAgICAgICAgICAgd2luZG93LnRvcC5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3dlZWtkYXknLFxuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgICAgICAgIHdlZWtkYXlJZDogcGFydHNbMV0sXG4gICAgICAgICAgICAgICAgICBzY3JvbGxIZWlnaHQ6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LCAnKicpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgfSwgMTAwKVxuICAgICAgfVxuICAgIH0sIGZhbHNlKVxuXG4gIH0sIFtsb2FkaW5nXSlcblxuICByZXR1cm4gKFxuICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+UG9sbHM8L3RpdGxlPlxuICAgICAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwiaW5pdGlhbC1zY2FsZT0xLjAsIHdpZHRoPWRldmljZS13aWR0aFwiIC8+XG4gICAgICAgIDxsaW5rIGhyZWY9XCIvc3RhdGljL2Nzcy9zdHlsZXMuY3NzXCIgcmVsPVwic3R5bGVzaGVldFwiIC8+XG4gICAgICAgIDxsaW5rIGhyZWY9XCIvc3RhdGljL2ltYWdlcy9mYXZpY29uLnBuZ1wiIHJlbD1cInNob3J0Y3V0IGljb25cIiAvPlxuICAgICAgPC9IZWFkPlxuXG4gICAgICA8c3R5bGUgZ2xvYmFsIGpzeD57YFxuICAgICAgICAqIHtcbiAgICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgIH1cblxuICAgICAgICBib2R5IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICBvdmVyZmxvdzogc2Nyb2xsO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNvbnRhaW5lciB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC5lcnJvciB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHRvcDogMHB4O1xuICAgICAgICAgIGxlZnQ6IDBweDtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuXG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgIHsobG9hZGluZyB8fCAhZGF0YSkgJiYgPFNwaW5uZXIgLz59XG4gICAgICAgIHsoKGVycm9yIHx8ICFkYXRhKSAmJiAhbG9hZGluZykgJiYgPGRpdiBjbGFzc05hbWU9XCJlcnJvclwiPjxFcnJvciBtZXNzYWdlPVwiRXJyb3IgbG9hZGluZyBwb2xsc1wiIC8+PC9kaXY+fVxuICAgICAgICB7ZGF0YSAmJlxuICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIHtkYXRhLnBvbGxzLm1hcCgocG9sbCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8UG9sbENvbXBvbmVudFxuICAgICAgICAgICAgICAgICAgdG9vbHM9e2ZhbHNlfVxuICAgICAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgIGV4cGlyeT17cG9sbC5leHBpcnl9XG4gICAgICAgICAgICAgICAgICB0aXRsZT17cG9sbC50aXRsZX1cbiAgICAgICAgICAgICAgICAgIHVzZXJJZD17cG9sbC51c2VyX2lkfVxuICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3BvbGwuZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICBvcHRpb25zPXtwb2xsLm9wdGlvbnN9XG4gICAgICAgICAgICAgICAgICBwb2xsVm90ZXM9e3BvbGwucG9sbF92b3Rlc31cbiAgICAgICAgICAgICAgICAgIGN1cnJlbnRVc2VySWQ9e3VzZXJJZH1cbiAgICAgICAgICAgICAgICAgIG9uU3VibWl0PXsob3B0aW9uSWQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgYWRkVm90ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYmplY3RzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25faWQ6IG9wdGlvbklkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvbGxfaWQ6IHBvbGxJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyX2lkOiB1c2VySWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aERhdGEod2l0aFJvdXRlcihNZXNzYWdlKSlcbiJdfQ== */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/pages/message.js */\"), __jsx(\"div\", {\n    className: \"jsx-1590883482\" + \" \" + \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, (loading || !data) && __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), (error || !data) && !loading && __jsx(\"div\", {\n    className: \"jsx-1590883482\" + \" \" + \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(Error, {\n    message: \"Error loading polls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), data && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, data.polls.map((poll, index) => {\n    return __jsx(PollComponent, {\n      tools: false,\n      key: index,\n      expiry: poll.expiry,\n      title: poll.title,\n      userId: poll.user_id,\n      description: poll.description,\n      options: poll.options,\n      pollVotes: poll.poll_votes,\n      currentUserId: userId,\n      onSubmit: optionId => {\n        addVote({\n          variables: {\n            objects: [{\n              option_id: optionId,\n              poll_id: pollId,\n              user_id: userId\n            }]\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    });\n  }))));\n}\n\nexport default withData(withRouter(Message));","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/pages/message.js"],"names":["React","useState","useEffect","useRouter","withRouter","Head","fetch","Button","Error","Loading","Notification","Spinner","gql","Query","withData","PollComponent","useMutation","useSubscription","ADD_VOTE","Message","props","router","query","userId","setUserId","channelId","setChannelId","pollId","setPollId","payload","addVote","addVoteData","loading","error","data","document","addEventListener","event","target","readyState","setTimeout","window","location","search","split","map","q","parts","top","postMessage","type","weekdayId","scrollHeight","documentElement","polls","poll","index","expiry","title","user_id","description","options","poll_votes","optionId","variables","objects","option_id","poll_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter, withRouter } from 'next/router'\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport withData from '../config'\nimport PollComponent from '../components/poll.component'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\n\nconst ADD_VOTE = gql`\n  mutation add_vote($objects: [poll_votes_insert_input!]!) {\n    insert_poll_votes(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n`;\n\nfunction Message(props) {\n  // ?userId=5db7e3c98476242154d43181&channelId=5db87f04db059a6d8dc8d068\n  const { router: { query }} = props\n  const [userId, setUserId] = useState(query.userId)\n  const [channelId, setChannelId] = useState(query.channelId)\n  const [pollId, setPollId] = useState(query.payload)\n  const [addVote, addVoteData] = useMutation(ADD_VOTE)\n  const { loading, error, data } = useSubscription(gql`\n    subscription {\n      polls(where: { id: { _eq: ${pollId} } }) {\n        id\n        title\n        description\n        user_id\n        channel_id\n        expiry\n        options\n        poll_votes {\n          user_id\n          option_id\n        }\n      }\n    }\n  `)\n\n  useEffect(() => {\n    document.addEventListener('readystatechange', event => {\n      if (event.target.readyState === \"complete\") {\n        setTimeout(() => {\n          window.location.search.split('&').map(q => {\n            const parts = q.split('=')\n\n            if (parts[0] == 'weekdayId') {\n              window.top.postMessage({\n                type: 'weekday',\n                payload: {\n                  weekdayId: parts[1],\n                  scrollHeight: document.documentElement.scrollHeight,\n                }\n              }, '*')\n            }\n          })\n        }, 100)\n      }\n    }, false)\n\n  }, [loading])\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Polls</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link href=\"/static/css/styles.css\" rel=\"stylesheet\" />\n        <link href=\"/static/images/favicon.png\" rel=\"shortcut icon\" />\n      </Head>\n\n      <style global jsx>{`\n        * {\n          margin: 0px;\n          padding: 0px;\n        }\n\n        body {\n          background: white;\n          overflow: scroll;\n        }\n\n        .container {\n          background: white;\n          padding: 20px;\n        }\n\n        .error {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          width: 100%;\n        }\n      `}</style>\n\n\n      <div className=\"container\">\n        {(loading || !data) && <Spinner />}\n        {((error || !data) && !loading) && <div className=\"error\"><Error message=\"Error loading polls\" /></div>}\n        {data &&\n          <React.Fragment>\n            {data.polls.map((poll, index) => {\n              return (\n                <PollComponent\n                  tools={false}\n                  key={index}\n                  expiry={poll.expiry}\n                  title={poll.title}\n                  userId={poll.user_id}\n                  description={poll.description}\n                  options={poll.options}\n                  pollVotes={poll.poll_votes}\n                  currentUserId={userId}\n                  onSubmit={(optionId) => {\n                    addVote({\n                      variables: {\n                        objects: [\n                          {\n                            option_id: optionId,\n                            poll_id: pollId,\n                            user_id: userId,\n                          }\n                        ]\n                      }\n                    })\n                  }}\n                />\n              )\n            })}\n          </React.Fragment>\n        }\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withData(withRouter(Message))\n"]},"metadata":{},"sourceType":"module"}