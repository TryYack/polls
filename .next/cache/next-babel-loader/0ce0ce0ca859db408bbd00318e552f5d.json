{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Yack/polls/components/poll.component.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation delete_polls($id: Int) {\\n    delete_polls(\\n      where: {id: {_eq: $id}}\\n    ) {\\n      affected_rows\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { Progress, Button } from '@yack/elements';\nimport moment from 'moment';\nimport fetch from 'isomorphic-unfetch';\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\nimport { Error } from '@yack/elements';\nimport gql from 'graphql-tag';\nimport { openAppModal, createChannelMessage, deleteChannelMessagesWithResourceId } from '@yack/dev-kit';\nvar DELETE_POLL = gql(_templateObject());\nexport default function PollComponent(props) {\n  var _useState = useState(false),\n      complete = _useState[0],\n      setComplete = _useState[1];\n\n  var _useState2 = useState(0),\n      total = _useState2[0],\n      setTotal = _useState2[1];\n\n  var _useState3 = useState(0),\n      highest = _useState3[0],\n      setHighest = _useState3[1];\n\n  var _useState4 = useState(0),\n      expired = _useState4[0],\n      setExpired = _useState4[1];\n\n  var _useState5 = useState(null),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var _useMutation = useMutation(DELETE_POLL),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deletePoll = _useMutation2[0],\n      deleteData = _useMutation2[1];\n\n  var sharePoll =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var channelToken, message, attachments, resourceId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              channelToken = props.token;\n              message = 'Here is a poll';\n              attachments = null;\n              resourceId = props.id;\n              _context.prev = 4;\n              _context.next = 7;\n              return createChannelMessage(channelToken, message, attachments, resourceId);\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](4);\n              setError('Could not share poll');\n              setTimeout(function () {\n                return setError(null);\n              }, 5000);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 9]]);\n    }));\n\n    return function sharePoll() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updatePoll =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              openAppModal('Update poll', 'http://localhost:3000/update?pollId=' + props.id, '50%', '50%', props.token);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function updatePoll() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var confirmDeletePoll =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var channelToken, resourceId;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (confirm(\"Are you sure?\")) {\n                channelToken = props.token;\n                resourceId = props.id;\n                deletePoll({\n                  variables: {\n                    id: resourceId\n                  }\n                });\n                deleteChannelMessagesWithResourceId(channelToken, resourceId);\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function confirmDeletePoll() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var voteOption =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(optionId) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              props.onSubmit(optionId);\n              setComplete(true);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function voteOption(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var voteCountHighest = 0;\n    props.options.map(function (option) {\n      // See if this user has completed the poll\n      props.pollVotes.map(function (vote) {\n        if (vote.user_id == props.currentUserId) setComplete(true);\n      }); // Set the score for the highest amount of votes\n\n      voteCountHighest = props.pollVotes.filter(function (vote) {\n        return vote.option_id == option.id;\n      }).length;\n    });\n    setTotal(props.pollVotes.length);\n    setHighest(voteCountHighest);\n    setExpired(moment(props.expiry).isBefore(moment()));\n  }, [props]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(_JSXStyle, {\n    id: \"4211460005\",\n    __self: this\n  }, \".poll-container.jsx-4211460005{width:100%;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin-bottom:20px;}.poll-inner.jsx-4211460005{-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.progress-container.jsx-4211460005{margin-bottom:5px;width:100%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/joduplessis/Work/Yack/polls/components/poll.component.js */\"), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"poll-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, error && __jsx(Error, {\n    message: \"Error loading polls\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"poll-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"h4 color-d3 text-left w-100 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"h5 color-d0 text-left w-100 mb-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, props.description), !complete && !expired && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, props.options.map(function (option, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-4211460005\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(Button, {\n      text: option.text,\n      theme: \"blue-border\",\n      size: \"full-width\",\n      style: {\n        height: 35\n      },\n      onClick: function onClick() {\n        return voteOption(option.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  })), (complete || expired) && __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, props.options.map(function (option, index) {\n    var poll_votes = props.pollVotes.filter(function (vote) {\n      return vote.option_id == option.id;\n    });\n    var percentage = poll_votes.length == 0 ? 0 : Math.floor(poll_votes.length / total * 100);\n    var color = poll_votes ? '#f0f2f5' : poll_votes.length >= highest ? '#e9edf2' : '#f0f2f5';\n    return __jsx(\"div\", {\n      key: index,\n      className: \"jsx-4211460005\" + \" \" + \"progress-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, __jsx(Progress, {\n      percentage: percentage,\n      color: color,\n      text: option.text,\n      labels: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, expired && props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"This poll expired \", moment(props.expiry).fromNow()), !expired && props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"This poll expires on \", moment(props.expiry).format('LL')), !expired && !props.expiry && __jsx(\"span\", {\n    className: \"jsx-4211460005\" + \" \" + \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"This poll does not expire\")), props.tools && __jsx(\"div\", {\n    className: \"jsx-4211460005\" + \" \" + \"p color-d1 text-left w-100 mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    onClick: sharePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Share to channel\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    onClick: updatePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button ml-10 color-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Update\"), props.currentUserId == props.userId && __jsx(\"strong\", {\n    onClick: confirmDeletePoll,\n    className: \"jsx-4211460005\" + \" \" + \"button ml-10 color-red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["/Users/joduplessis/Work/Yack/polls/components/poll.component.js"],"names":["React","useState","useEffect","Progress","Button","moment","fetch","useMutation","useSubscription","Error","gql","openAppModal","createChannelMessage","deleteChannelMessagesWithResourceId","DELETE_POLL","PollComponent","props","complete","setComplete","total","setTotal","highest","setHighest","expired","setExpired","error","setError","deletePoll","deleteData","sharePoll","channelToken","token","message","attachments","resourceId","id","setTimeout","updatePoll","confirmDeletePoll","confirm","variables","voteOption","optionId","onSubmit","voteCountHighest","options","map","option","pollVotes","vote","user_id","currentUserId","filter","option_id","length","expiry","isBefore","title","description","index","text","height","poll_votes","percentage","Math","floor","color","fromNow","format","tools","userId"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,gBAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,qBAA7C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,YAAT,EAAuBC,oBAAvB,EAA6CC,mCAA7C,QAAwF,eAAxF;AAEA,IAAMC,WAAW,GAAGJ,GAAH,mBAAjB;AAUA,eAAe,SAASK,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,kBACXf,QAAQ,CAAC,KAAD,CADG;AAAA,MACpCgB,QADoC;AAAA,MAC1BC,WAD0B;;AAAA,mBAEjBjB,QAAQ,CAAC,CAAD,CAFS;AAAA,MAEpCkB,KAFoC;AAAA,MAE7BC,QAF6B;;AAAA,mBAGbnB,QAAQ,CAAC,CAAD,CAHK;AAAA,MAGpCoB,OAHoC;AAAA,MAG3BC,UAH2B;;AAAA,mBAIbrB,QAAQ,CAAC,CAAD,CAJK;AAAA,MAIpCsB,OAJoC;AAAA,MAI3BC,UAJ2B;;AAAA,mBAKjBvB,QAAQ,CAAC,IAAD,CALS;AAAA,MAKpCwB,KALoC;AAAA,MAK7BC,QAL6B;;AAAA,qBAMVnB,WAAW,CAACO,WAAD,CAND;AAAA;AAAA,MAMpCa,UANoC;AAAA,MAMxBC,UANwB;;AAQ3C,MAAMC,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,YADU,GACKd,KAAK,CAACe,KADX;AAEVC,cAAAA,OAFU,GAEA,gBAFA;AAGVC,cAAAA,WAHU,GAGI,IAHJ;AAIVC,cAAAA,UAJU,GAIGlB,KAAK,CAACmB,EAJT;AAAA;AAAA;AAAA,qBAORvB,oBAAoB,CACxBkB,YADwB,EAExBE,OAFwB,EAGxBC,WAHwB,EAIxBC,UAJwB,CAPZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcdR,cAAAA,QAAQ,CAAC,sBAAD,CAAR;AACAU,cAAAA,UAAU,CAAC;AAAA,uBAAMV,QAAQ,CAAC,IAAD,CAAd;AAAA,eAAD,EAAuB,IAAvB,CAAV;;AAfc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATG,SAAS;AAAA;AAAA;AAAA,KAAf;;AAmBA,MAAMQ,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AACjB1B,cAAAA,YAAY,CAAC,aAAD,EAAgB,yCAAyCK,KAAK,CAACmB,EAA/D,EAAmE,KAAnE,EAA0E,KAA1E,EAAiFnB,KAAK,CAACe,KAAvF,CAAZ;;AADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVM,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAIA,MAAMC,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB,kBAAIC,OAAO,CAAC,eAAD,CAAX,EAA8B;AACtBT,gBAAAA,YADsB,GACPd,KAAK,CAACe,KADC;AAEtBG,gBAAAA,UAFsB,GAETlB,KAAK,CAACmB,EAFG;AAI5BR,gBAAAA,UAAU,CAAC;AAAEa,kBAAAA,SAAS,EAAE;AAAEL,oBAAAA,EAAE,EAAED;AAAN;AAAb,iBAAD,CAAV;AACArB,gBAAAA,mCAAmC,CAACiB,YAAD,EAAeI,UAAf,CAAnC;AACD;;AAPuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBI,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAUA,MAAMG,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACjB1B,cAAAA,KAAK,CAAC2B,QAAN,CAAeD,QAAf;AACAxB,cAAAA,WAAW,CAAC,IAAD,CAAX;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVuB,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAKAvC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI0C,gBAAgB,GAAG,CAAvB;AAEA5B,IAAAA,KAAK,CAAC6B,OAAN,CAAcC,GAAd,CAAkB,UAAAC,MAAM,EAAI;AAC1B;AACA/B,MAAAA,KAAK,CAACgC,SAAN,CAAgBF,GAAhB,CAAoB,UAAAG,IAAI,EAAI;AAC1B,YAAIA,IAAI,CAACC,OAAL,IAAgBlC,KAAK,CAACmC,aAA1B,EAAyCjC,WAAW,CAAC,IAAD,CAAX;AAC1C,OAFD,EAF0B,CAM1B;;AACA0B,MAAAA,gBAAgB,GAAG5B,KAAK,CAACgC,SAAN,CAAgBI,MAAhB,CAAuB,UAAAH,IAAI;AAAA,eAAIA,IAAI,CAACI,SAAL,IAAkBN,MAAM,CAACZ,EAA7B;AAAA,OAA3B,EAA4DmB,MAA/E;AACD,KARD;AAUAlC,IAAAA,QAAQ,CAACJ,KAAK,CAACgC,SAAN,CAAgBM,MAAjB,CAAR;AACAhC,IAAAA,UAAU,CAACsB,gBAAD,CAAV;AACApB,IAAAA,UAAU,CAACnB,MAAM,CAACW,KAAK,CAACuC,MAAP,CAAN,CAAqBC,QAArB,CAA8BnD,MAAM,EAApC,CAAD,CAAV;AACD,GAhBQ,EAgBN,CAACW,KAAD,CAhBM,CAAT;AAkBA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+0TA4BE;AAAA,wCAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,KAAK,IAAI,MAAC,KAAD;AAAO,IAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAGE;AAAA,wCAAe,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDT,KAAK,CAACyC,KAAzD,CADF,EAEE;AAAA,wCAAe,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDzC,KAAK,CAAC0C,WAA1D,CAFF,EAII,CAACzC,QAAD,IAAa,CAACM,OAAf,IACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAAC6B,OAAN,CAAcC,GAAd,CAAkB,UAACC,MAAD,EAASY,KAAT,EAAmB;AACpC,WACE;AAAoC,MAAA,GAAG,EAAEA,KAAzC;AAAA,0CAAe,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,IAAI,EAAEZ,MAAM,CAACa,IADf;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAJT;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMpB,UAAU,CAACM,MAAM,CAACZ,EAAR,CAAhB;AAAA,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD,GAZA,CADH,CALJ,EAsBG,CAAClB,QAAQ,IAAIM,OAAb,KACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAAC6B,OAAN,CAAcC,GAAd,CAAkB,UAACC,MAAD,EAASY,KAAT,EAAmB;AACpC,QAAMG,UAAU,GAAG9C,KAAK,CAACgC,SAAN,CAAgBI,MAAhB,CAAuB,UAAAH,IAAI;AAAA,aAAIA,IAAI,CAACI,SAAL,IAAkBN,MAAM,CAACZ,EAA7B;AAAA,KAA3B,CAAnB;AACA,QAAM4B,UAAU,GAAGD,UAAU,CAACR,MAAX,IAAqB,CAArB,GAAyB,CAAzB,GAA6BU,IAAI,CAACC,KAAL,CAAYH,UAAU,CAACR,MAAX,GAAoBnC,KAArB,GAA8B,GAAzC,CAAhD;AACA,QAAM+C,KAAK,GAAGJ,UAAU,GACN,SADM,GAENA,UAAU,CAACR,MAAX,IAAqBjC,OAArB,GACE,SADF,GAEE,SAJpB;AAMA,WACE;AAAoC,MAAA,GAAG,EAAEsC,KAAzC;AAAA,0CAAe,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACE,MAAA,UAAU,EAAEI,UADd;AAEE,MAAA,KAAK,EAAEG,KAFT;AAGE,MAAA,IAAI,EAAEnB,MAAM,CAACa,IAHf;AAIE,MAAA,MAAM,EAAE,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD,GAnBA,CADH,CAvBJ,EA+CE;AAAA,wCAAe,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIrC,OAAO,IAAIP,KAAK,CAACuC,MAAlB,IACC;AAAA,wCAAgB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2ClD,MAAM,CAACW,KAAK,CAACuC,MAAP,CAAN,CAAqBY,OAArB,EAA3C,CAFJ,EAII,CAAC5C,OAAD,IAAYP,KAAK,CAACuC,MAAnB,IACC;AAAA,wCAAgB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA8ClD,MAAM,CAACW,KAAK,CAACuC,MAAP,CAAN,CAAqBa,MAArB,CAA4B,IAA5B,CAA9C,CALJ,EAOI,CAAC7C,OAAD,IAAY,CAACP,KAAK,CAACuC,MAApB,IACC;AAAA,wCAAgB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARJ,CA/CF,EA2DGvC,KAAK,CAACqD,KAAN,IACC;AAAA,wCAAe,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAsC,IAAA,OAAO,EAAExC,SAA/C;AAAA,wCAAkB,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAGIb,KAAK,CAACmC,aAAN,IAAuBnC,KAAK,CAACsD,MAA9B,IACC;AAA4C,IAAA,OAAO,EAAEjC,UAArD;AAAA,wCAAkB,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAMIrB,KAAK,CAACmC,aAAN,IAAuBnC,KAAK,CAACsD,MAA9B,IACC;AAA2C,IAAA,OAAO,EAAEhC,iBAApD;AAAA,wCAAkB,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CA5DJ,CAHF,CA5BF,CADF;AA2GD","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Progress, Button } from '@yack/elements'\nimport moment from 'moment'\nimport fetch from 'isomorphic-unfetch'\nimport { useMutation, useSubscription } from '@apollo/react-hooks'\nimport { Error } from '@yack/elements'\nimport gql from 'graphql-tag'\nimport { openAppModal, createChannelMessage, deleteChannelMessagesWithResourceId } from '@yack/dev-kit'\n\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport default function PollComponent(props) {\n  const [complete, setComplete] = useState(false)\n  const [total, setTotal] = useState(0)\n  const [highest, setHighest] = useState(0)\n  const [expired, setExpired] = useState(0)\n  const [error, setError] = useState(null)\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL)\n\n  const sharePoll = async () => {\n    const channelToken = props.token\n    const message = 'Here is a poll'\n    const attachments = null\n    const resourceId = props.id\n\n    try {\n      await createChannelMessage(\n        channelToken,\n        message,\n        attachments,\n        resourceId\n      )\n    } catch (e) {\n      setError('Could not share poll')\n      setTimeout(() => setError(null), 5000)\n    }\n  }\n\n  const updatePoll = async () => {\n    openAppModal('Update poll', 'http://localhost:3000/update?pollId=' + props.id, '50%', '50%', props.token)\n  }\n\n  const confirmDeletePoll = async () => {\n    if (confirm(\"Are you sure?\")) {\n      const channelToken = props.token\n      const resourceId = props.id\n\n      deletePoll({ variables: { id: resourceId } })\n      deleteChannelMessagesWithResourceId(channelToken, resourceId)\n    }\n  }\n\n  const voteOption = async (optionId) => {\n    props.onSubmit(optionId)\n    setComplete(true)\n  }\n\n  useEffect(() => {\n    let voteCountHighest = 0\n\n    props.options.map(option => {\n      // See if this user has completed the poll\n      props.pollVotes.map(vote => {\n        if (vote.user_id == props.currentUserId) setComplete(true)\n      })\n\n      // Set the score for the highest amount of votes\n      voteCountHighest = props.pollVotes.filter(vote => vote.option_id == option.id).length\n    })\n\n    setTotal(props.pollVotes.length)\n    setHighest(voteCountHighest)\n    setExpired(moment(props.expiry).isBefore(moment()))\n  }, [props])\n\n  return (\n    <React.Fragment>\n      <style jsx>{`\n        .poll-container {\n          width: 100%;\n          height: fit-content;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n          margin-bottom: 20px;\n        }\n\n        .poll-inner {\n          flex: 1;\n          flex-direction: column;\n          display: flex;\n          align-items: center;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .progress-container {\n          margin-bottom: 5px;\n          width: 100%;\n        }\n      `}</style>\n\n      <div className=\"poll-container\">\n        {error && <Error message=\"Error loading polls\" />}\n\n        <div className=\"poll-inner\">\n          <div className=\"h4 color-d3 text-left w-100 mb-0\">{props.title}</div>\n          <div className=\"h5 color-d0 text-left w-100 mb-10\">{props.description}</div>\n\n          {(!complete && !expired) &&\n            <React.Fragment>\n              {props.options.map((option, index) => {\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Button\n                      text={option.text}\n                      theme=\"blue-border\"\n                      size=\"full-width\"\n                      style={{ height: 35 }}\n                      onClick={() => voteOption(option.id)}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          {(complete || expired) &&\n            <React.Fragment>\n              {props.options.map((option, index) => {\n                const poll_votes = props.pollVotes.filter(vote => vote.option_id == option.id)\n                const percentage = poll_votes.length == 0 ? 0 : Math.floor((poll_votes.length / total) * 100)\n                const color = poll_votes\n                                ? '#f0f2f5'\n                                : poll_votes.length >= highest\n                                  ? '#e9edf2'\n                                  : '#f0f2f5'\n\n                return (\n                  <div className=\"progress-container\" key={index}>\n                    <Progress\n                      percentage={percentage}\n                      color={color}\n                      text={option.text}\n                      labels={true}\n                    />\n                  </div>\n                )\n              })}\n            </React.Fragment>\n          }\n\n          <div className=\"p color-d1 text-left w-100 mt-5\">\n            {(expired && props.expiry) &&\n              <span className=\"mr-10\">This poll expired {moment(props.expiry).fromNow()}</span>\n            }\n            {(!expired && props.expiry) &&\n              <span className=\"mr-10\">This poll expires on {moment(props.expiry).format('LL')}</span>\n            }\n            {(!expired && !props.expiry) &&\n              <span className=\"mr-10\">This poll does not expire</span>\n            }\n          </div>\n\n          {props.tools &&\n            <div className=\"p color-d1 text-left w-100 mt-5\">\n              <strong className=\"button color-blue\" onClick={sharePoll}>Share to channel</strong>\n\n              {(props.currentUserId == props.userId) &&\n                <strong className=\"button ml-10 color-blue\" onClick={updatePoll}>Update</strong>\n              }\n              {(props.currentUserId == props.userId) &&\n                <strong className=\"button ml-10 color-red\" onClick={confirmDeletePoll}>Delete</strong>\n              }\n            </div>\n          }\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}