{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/joduplessis/Work/Weekday/polls/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    \\tsubscription {\\n    \\t  polls {\\n    \\t    id\\n    \\t    title\\n          description\\n          user_id\\n          channel_id\\n          expiry\\n          questions\\n          answers {\\n            question_id\\n            user_id\\n          }\\n    \\t  }\\n    \\t}\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation add_poll($objects: [polls_insert_input!]!) {\\n    insert_polls(objects: $objects) {\\n      returning {\\n        id\\n        title\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation update_polls($id: Int, $changes: polls_set_input) {\\n    update_polls(\\n      where: {id: {_eq: $id}},\\n      _set: $changes\\n    ) {\\n      affected_rows\\n      returning {\\n        id\\n        title\\n        description\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation delete_polls($id: Int) {\\n    delete_polls(\\n      where: {id: {_eq: $id}}\\n    ) {\\n      affected_rows\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, withRouter } from 'next/router';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport withData from '../config';\nimport PollComponent from '../components/poll.component';\nimport { useMutation } from '@apollo/react-hooks';\nvar DELETE_POLL = gql(_templateObject());\nvar UPDATE_POLL = gql(_templateObject2());\nvar ADD_POLL = gql(_templateObject3());\n\nfunction Index(props) {\n  var _useState = useState(null),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var _useState2 = useState(''),\n      userId = _useState2[0],\n      setUserId = _useState2[1];\n\n  var _useState3 = useState(''),\n      channelId = _useState3[0],\n      setChannelId = _useState3[1];\n\n  var _useMutation = useMutation(ADD_POLL),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addPoll = _useMutation2[0],\n      addData = _useMutation2[1];\n\n  var _useMutation3 = useMutation(UPDATE_POLL),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      updatePoll = _useMutation4[0],\n      updateData = _useMutation4[1];\n\n  var _useMutation5 = useMutation(DELETE_POLL),\n      _useMutation6 = _slicedToArray(_useMutation5, 2),\n      deletePoll = _useMutation6[0],\n      deleteData = _useMutation6[1];\n\n  useEffect(function () {\n    // const { router: { query: { payload } }} = props;\n    var payload = btoa(_JSON$stringify({\n      userId: '5db7e3c98476242154d43181',\n      channelId: '5db87f04db059a6d8dc8d068'\n    }));\n    var parsedPayload = JSON.parse(atob(payload));\n    setUserId(parsedPayload.userId);\n    setChannelId(parsedPayload.channelId);\n    setQuery(gql(_templateObject4()));\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Polls\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/css/styles.css\",\n    rel: \"stylesheet\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"/static/images/favicon.png\",\n    rel: \"shortcut icon\",\n    className: \"jsx-1390389061\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1390389061\",\n    __self: this\n  }, \"*{margin:0px;padding:0px;}body{background:white;}.container{background:white;width:100%;height:100%;position:absolute;left:0px;top:0px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.error{position:absolute;top:0px;left:0px;width:100%;}.polls-listing-container{-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;padding:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/joduplessis/Work/Weekday/polls/pages/index.js */\"), query && __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"container column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"polls-listing-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Query, {\n    query: query,\n    fetchPolicy: 'cache-and-network',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        data = _ref.data,\n        error = _ref.error;\n    if (loading) return __jsx(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    });\n    if (error) return __jsx(\"div\", {\n      className: \"jsx-1390389061\" + \" \" + \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(Error, {\n      message: \"Error loading polls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })); // If no polls exist\n\n    if (data.polls.length == 0) {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: \"../static/images/no-polls.png\",\n        width: \"60%\",\n        className: \"jsx-1390389061\" + \" \" + \"mb-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"jsx-1390389061\" + \" \" + \"h3 mb-20 pl-20 pr-20 color-d2 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"There are no polls\"), __jsx(\"div\", {\n        className: \"jsx-1390389061\" + \" \" + \"h5 mb-20 pl-20 pr-20 color-d0 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"There are no polls for this channel. Click on the button below to create your first poll.\"));\n    } // If there are\n\n\n    return data.polls.map(function (poll, index) {\n      return __jsx(PollComponent, {\n        key: index,\n        expiry: poll.expiry,\n        title: poll.title,\n        userId: poll.user_id,\n        currentUserId: userId,\n        description: poll.description,\n        questions: poll.questions,\n        answers: poll.answers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      });\n    });\n  }), __jsx(\"div\", {\n    className: \"jsx-1390389061\" + \" \" + \"row justify-content-center mt-30 w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Create a poll\",\n    onClick: function onClick() {\n      return addPoll({\n        variables: {\n          objects: [{\n            title: 'cool',\n            description: 'Nice',\n            channel_id: '007'\n          }]\n        }\n      });\n    },\n    className: \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Delete a poll\",\n    onClick: function onClick() {\n      return deletePoll({\n        variables: {\n          id: 3\n        }\n      });\n    },\n    className: \"mr-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    theme: \"blue-border\",\n    text: \"Update a poll\",\n    onClick: function onClick() {\n      return updatePoll({\n        variables: {\n          id: 1,\n          changes: {\n            title: 'Updated....' + new Date().getTime()\n          }\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })))));\n}\n\nIndex.getInitialProps = function (context) {\n  var payload = context.query.payload;\n  return {\n    cool: true\n  };\n};\n\nexport default withData(withRouter(Index));","map":{"version":3,"sources":["/Users/joduplessis/Work/Weekday/polls/pages/index.js"],"names":["React","useState","useEffect","useRouter","withRouter","Head","fetch","Button","Error","Loading","Notification","Spinner","gql","Query","withData","PollComponent","useMutation","DELETE_POLL","UPDATE_POLL","ADD_POLL","Index","props","query","setQuery","userId","setUserId","channelId","setChannelId","addPoll","addData","updatePoll","updateData","deletePoll","deleteData","payload","btoa","parsedPayload","JSON","parse","atob","loading","data","error","polls","length","map","poll","index","expiry","title","user_id","description","questions","answers","variables","objects","channel_id","id","changes","Date","getTime","getInitialProps","context","cool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter, withRouter } from 'next/router'\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Error, Loading, Notification, Spinner } from '@weekday/elements'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport withData from '../config'\nimport PollComponent from '../components/poll.component'\nimport { useMutation } from '@apollo/react-hooks'\n\nconst DELETE_POLL = gql`\n  mutation delete_polls($id: Int) {\n    delete_polls(\n      where: {id: {_eq: $id}}\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nconst UPDATE_POLL = gql`\n  mutation update_polls($id: Int, $changes: polls_set_input) {\n    update_polls(\n      where: {id: {_eq: $id}},\n      _set: $changes\n    ) {\n      affected_rows\n      returning {\n        id\n        title\n        description\n      }\n    }\n  }\n`;\n\nconst ADD_POLL = gql`\n  mutation add_poll($objects: [polls_insert_input!]!) {\n    insert_polls(objects: $objects) {\n      returning {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction Index(props) {\n  const [query, setQuery] = useState(null)\n  const [userId, setUserId] = useState('')\n  const [channelId, setChannelId] = useState('')\n  const [addPoll, addData] = useMutation(ADD_POLL)\n  const [updatePoll, updateData] = useMutation(UPDATE_POLL)\n  const [deletePoll, deleteData] = useMutation(DELETE_POLL)\n\n  useEffect(() => {\n    // const { router: { query: { payload } }} = props;\n    const payload = btoa(JSON.stringify({ userId: '5db7e3c98476242154d43181', channelId: '5db87f04db059a6d8dc8d068' }))\n    const parsedPayload = JSON.parse(atob(payload))\n\n    setUserId(parsedPayload.userId)\n    setChannelId(parsedPayload.channelId)\n    setQuery(gql`\n    \tsubscription {\n    \t  polls {\n    \t    id\n    \t    title\n          description\n          user_id\n          channel_id\n          expiry\n          questions\n          answers {\n            question_id\n            user_id\n          }\n    \t  }\n    \t}\n    `)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Polls</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <link href=\"/static/css/styles.css\" rel=\"stylesheet\" />\n        <link href=\"/static/images/favicon.png\" rel=\"shortcut icon\" />\n      </Head>\n\n      <style global jsx>{`\n        * {\n          margin: 0px;\n          padding: 0px;\n        }\n\n        body {\n          background: white;\n        }\n\n        .container {\n          background: white;\n          width: 100%;\n          height: 100%;\n          position: absolute;\n          left: 0px;\n          top: 0px;\n          display: flex;\n          align-items: stretch;\n          align-content: center;\n          justify-content: center;\n        }\n\n        .error {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          width: 100%;\n        }\n\n        .polls-listing-container {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          align-content: center;\n          justify-content: flex-start;\n          padding: 20px;\n        }\n      `}</style>\n\n      {query &&\n        <div className=\"container column\">\n          <div className=\"polls-listing-container\">\n\n            <Query\n              query={query}\n              fetchPolicy={'cache-and-network'}>\n              {({ loading, data, error }) => {\n                if (loading) return <Spinner />\n                if (error) return <div className=\"error\"><Error message=\"Error loading polls\" /></div>\n\n\n                // If no polls exist\n                if (data.polls.length == 0) {\n                  return (\n                    <React.Fragment>\n                      <img src=\"../static/images/no-polls.png\" width=\"60%\" className=\"mb-30\"/>\n                      <div className=\"h3 mb-20 pl-20 pr-20 color-d2 text-center\">There are no polls</div>\n                      <div className=\"h5 mb-20 pl-20 pr-20 color-d0 text-center\">There are no polls for this channel. Click on the button below to create your first poll.</div>\n                    </React.Fragment>\n                  )\n                }\n\n                // If there are\n                return data.polls.map((poll, index) => {\n                  return (\n                    <PollComponent\n                      key={index}\n                      expiry={poll.expiry}\n                      title={poll.title}\n                      userId={poll.user_id}\n                      currentUserId={userId}\n                      description={poll.description}\n                      questions={poll.questions}\n                      answers={poll.answers}\n                    />\n                  )\n                })\n              }}\n            </Query>\n\n            <div className=\"row justify-content-center mt-30 w-100\">\n              <Button\n                size=\"small\"\n                theme=\"blue-border\"\n                text=\"Create a poll\"\n                onClick={() => addPoll({ variables: { objects: [{ title: 'cool', description: 'Nice', channel_id: '007' }] } })}\n                className=\"mr-10\"\n              />\n              <Button\n                size=\"small\"\n                theme=\"blue-border\"\n                text=\"Delete a poll\"\n                onClick={() => deletePoll({ variables: { id: 3 } })}\n                className=\"mr-10\"\n              />\n              <Button\n                size=\"small\"\n                theme=\"blue-border\"\n                text=\"Update a poll\"\n                onClick={() => updatePoll({ variables: { id: 1, changes: { title: 'Updated....'+new Date().getTime() } } })}\n              />\n            </div>\n          </div>\n        </div>\n      }\n    </React.Fragment>\n  )\n}\n\nIndex.getInitialProps = (context) => {\n  const { query: { payload } } = context;\n\n  return {\n    cool: true\n  }\n}\n\nexport default withData(withRouter(Index))\n"]},"metadata":{},"sourceType":"module"}